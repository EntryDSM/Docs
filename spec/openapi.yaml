openapi: "3.0.0"
info:
  version: "1.0.0"

  title: api.entrydsm.hs.kr 
  
  termsOfService: "https://entrydsm.hs.kr/terms/"
  contact:
    email: entrydsm@entrydsm.hs.kr
    url: "https://www.facebook.com/entrydsm/"
  x-logo:
    url: "https://i.ibb.co/JxqpcqB/New-Project.png"

  description: |
    # Summary

    [![Build Status](https://travis-ci.org/EntryDSM/Docs.svg?branch=master)](https://travis-ci.org/EntryDSM/Docs)

    This is EntryDSM API docs! You can develop services&frontend by reading this :)

    # Error Codes
    ## general error
    |description|code|
    |-|-|
    | unknown internal server error | 9999 |


    ## 10xx server error
    |description|code|
    |-|-|
    | redis error | 1002 |
    | mysql error | 1003 |

    ## 11xx application validation error
    |description|code|
    |-|-|
    | validation error | 1100 | 
    | already final submitted | 1101 |
    | any application submitted yet | 1102 |

    ## 12xx auth error
    |description|code|
    |-|-|
     |user not found  | 1200 |
     |token expired  | 1201 |
     |invalid token  | 1202 |

    ## 13xx signup error
    |description|code|
    |-|-|
    | invalid signup info | 1300 | 
    | user already exists | 1301 | 
    | signup already requested | 1302 | 
    | invalid verification key | 1303 | 

servers:
  - url: "https://api.entrydsm.hs.kr/api/v1"

tags:
  - name: 회원가입
    description: 회원가입 요청과 인증
  - name: 인증
    description: 로그인, 리프레쉬, 로그아웃
  - name: 마이페이지
    description: 전형 상태
  - name: 사진
    description: 사진 제출
  - name: 원서 가져오기
    description: 원서 데이터 가져오기
  - name: 원서 제출
    description: 원서 제출하기
  - name: 최종제출
    description: 최종제출.
  - name: 학교검색
    description: 학교검색
  - name: ged_model
    x-displayName: The GED Application Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/GEDApplication" />
  - name: graduated_model
    x-displayName: The Graduated Application Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/GraduatedApplication" />
  - name: ungraduated_model
    x-displayName: The Ungraduated Application Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UngraduatedApplication" />
  - name: general_error_model
    x-displayName: The General Error Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/GeneralError" />
  - name: Yves-Saint-Laurent
    description: 엔트리 인터뷰 시스템
      
x-tagGroups:
  - name: Avengers
    tags:
      - 회원가입
      - 인증
      - 마이페이지
      - 사진
      - 원서 가져오기
      - 원서 제출
      - 최종제출
      - 학교검색
  - name: Rolex
    tags:
      - 어드민 인증
      - 지원 통계 
      - 지원자 리스트
      - 특정 지원자 정보
      - 원서 접수 취소
  - name: Schemas
    tags: 
      - ged_model
      - graduated_model
      - ungraduated_model
      - general_error_model
  - name: Interview
    tags: 
      - Yves-Saint-Laurent

paths:
  /signup:
    post:
      tags:
        - 회원가입
      summary: 회원가입 요청
      requestBody:
        content:
          application/json:
            schema:    
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        204:
          description: Verification code and link sent to your email.
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSignupInfo"
        409:
          description: Conflict exceeded
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/UserAlreadyExists"
                  - $ref: "#/components/schemas/SignupAlreadyRequested"
  
  /signup/verify:
    get:
      tags:
        - 회원가입
      summary: 회원가입 인증
      parameters:
        - name: key
          in: query
          schema:
            type: string
      responses:
        204:
          description: Verification success
        400:
          description: Invalid or expired key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidVerificationKey"
  
  /auth:
    post:
      tags:
        - 인증
      summary: 로그인
      requestBody:
        content:
          application/json:
            schema:    
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        201:
          description: Login succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "ThIsIs.TrUlY.AcCeSsToKeN"
                  refresh:
                    type: string
                    example: "ThIsIs.TrUlY.ReFrEsHtOkEn"
        403:
          description: Login information is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNotFound"
    patch:
      tags:
        - 인증
      summary: 리프레쉬
      security: [
        {RefreshJSONWebTokenAuthentication: []}
      ]
      responses:
        201:
          description: Refresh succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "ThIsIs.TrUlY.AcCeSsToKeN"
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired"                    

    delete:
      tags:
        - 인증
      summary: 로그아웃
      security: [
        {RefreshJSONWebTokenAuthentication: []}
      ]
      responses:
        204:
          description: Logout succeed

  /self/status:
    get:
      tags:
        - 마이페이지
      summary: 진행상황 등 내 정보
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationStatus"
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired" 

  /self/photo:
    put:
      tags:
        - 사진
      summary: 사진 업로드
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        204:
          description: Image upload success
        400:
          description: Invalid type of image
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired" 

    get:
      tags:
        - 사진
      summary: 사진 받아오기
      responses:
        200:
          description: Success
          content:
            image/png, image/jpeg:
              schema:
                type: string
                format: binary
        404:
          description: Image not found
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired" 

  /self/application:
    get:
      tags:
        - 원서 가져오기
      summary: 원서 가져오기
      security: [
        {JSONWebTokenAuthentication: []}
      ]

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/GEDApplication"
                - $ref: "#/components/schemas/GraduatedApplication"
                - $ref: "#/components/schemas/UngraduatedApplication"
        404:
          description: Any application submitted yet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNotFound"
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired" 

  /self/application/ged:
    put:
      tags:
        - 원서 제출
      summary: 검정고시 원서 제출
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GEDApplication"

      responses:
        204:
          description: Success
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationPatch"
        409:
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyFinalSubmitted"    
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired" 

  /self/application/graduated:
    put:
      tags:
        - 원서 제출
      summary: 졸업자 원서 제출
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GraduatedApplication"

      responses:
        204:
          description: Success
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationPatch"
        409:
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyFinalSubmitted"  
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired" 

  /self/application/ungraduated:
    put:
      tags:
        - 원서 제출
      summary: 졸업 예정자 원서 제출
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UngraduatedApplication"

      responses:
        204:
          description: Success
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationPatch"
        409:
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyFinalSubmitted"  
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired"
  
  /self/application/final-submit:
    patch:
      tags:
        - 최종제출
      summary: 최종제출
      description: 되돌릴 수 없음
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      responses:
        204:
          description: Final submit succeed
        400:
          description: Invalid application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationFinalSubmit"
        409:
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyFinalSubmitted"
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired"

  /school/search:
    get:
      tags:
        - 학교검색
      summary: 학교를 검색
      description: 학교검색 API
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: query
          in: query
          schema:
            type: string
            example: 휘경중학
            description: 학교 이름만으로 검색하면 풀네임 반환
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["서울특별시교육청 서울특별시동부교육지원청 휘경중학교", "부산광역시교육청 부산광역동부교육지원청 휘경중학교"]

  /agency/cheak:
    get:
      tags:
        - Yves-Saint-Laurent
      summary: 기관 코드 확인
      description: Check agency code
      parameters:
        - name: code
          in : query
          example: ENTRY19
          description: agency code
          schema:
            type: string
      responses:
        200:
          description: check agency succese
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency_name:
                    type: string
                    example: "ENTRYDSM"
                  agnecy_explanation:
                    type: string
                    example: "학교입학전형을 만드는 엔트리 개발팀입니다."
        400:
          description: unseen agency

  /admin/{agency_code}/interviewer/accept:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: 면접관 기관 신청 수락
      description: acceptance of interviewer
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
             schema:
               type: object
               properties:
                 user_email:
                  type: string
                  example: "eunjuoi0515@gmail.com"
      responses:
        201:
          description: Successful interviewer accept
        400:
          description: Check json format

  /admin/{agency_code}/interviewer/reject:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: 면접관 기관 신청 거절
      description: be rejected by the agency
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
             schema:
               type: object
               properties:
                 user_email:
                  type: string
                  example: "eunjuoi0515@gmail.com"
      responses:
        201:
          description: Successful interviewer reject
        400:
          description: Check json format

  /admin/{agency_code}/interviewer:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: 기관에 가입 신청한 면접관 리스트 보기
      description: an applicant interviewer list
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      responses:
        200:
          description: applicant interviewer list
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewer:
                    type: array
                    items:
                      properties:
                          interviewer_name:
                              type: string
                              example: "이채은"
        400:
          description: None Resources

  /admin/agency/{agency_code}:
    delete:
      tags:
        - Yves-Saint-Laurent
      summary: 기관 삭제
      description: delete agency
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful agency delete
        400:
          description: None Resources

    get:
      tags:
      - Yves-Saint-Laurent
      summary: 기관 정보 보기
      description: get agency information
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: get agency information
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency_name:
                    type: string
                    example: "DSM"
                  agency_kind:
                    type: string
                    example: "학교/특수목적고등학교"
                  agency_code:
                    type: string
                    example: "1EDOLW"
        400:
          description: None Resources

    patch:
      tags:
        - Yves-Saint-Laurent
      summary: 기관 설명 수정하기
      description: change agency explanation
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
             schema:
               type: object
               properties:
                 explanation:
                  type: string
                  example: "저희 엔트리는 입학전형~"
      responses:
        201:
          description: Successful change agency explanation
        400:
          description: Check json format

  /agency:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: 면접관이 가입되어있는 기관 보기
      description: View the agency the interviewer subscribes to
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      responses:
        200:
          description: get interviewer belonged agency
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency:
                    type: array
                    items:
                      properties:
                          agency_name:
                              type: string
                              example: "Entry"
                          agency_code:
                            type: string
                            example: "29382"
        400:
          description: None Resources

  /{agency_code}:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: 현재 진행중인 면접 리스트
      description: get an ongoing interview with an agency
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: get ongoing interview
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    interview:
                      type: array
                      items:
                        properties:
                            interview_name:
                              type: string
                              example: "대전일반전형면접"
                            interivew_explanation:
                              type: string
                              example: "대전 일반 전형에 대한 면접입니다."
                            interview_id:
                              type: string
                              example: integer
        400:
          description: None Resources

  /admin/{agency_code}/ready/interview:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: 준비중인 면접 리스트 보기
      description: get an ready interview list with an agency
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: get ready interview
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    interview:
                      type: array
                      items:
                        properties:
                            interview_name:
                              type: string
                              example: "대전일반전형면접"
                            interivew_explanation:
                              type: string
                              example: "대전 일반 전형에 대한 면접입니다."
                            interview_id:
                              type: string
                              example: integer
        400:
          description: None Resources

  /{agency_code}/{interview_id}/question:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: 면접 질문 리스트
      description: get interview question
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interivew_id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: get interivew question
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      properties:
                        question_content:
                          type: string
                          example: "간단하게 자기소개를 해주세요."
                        quesiton_type:
                          type: integer
                          example: 1
                        question_num:
                          type: integer
                          example: 2
                        question_id:
                          type: integer
                          example: 5
                        check_list:
                          type: array
                          items:
                            type: string
                            example: "친절한가?"
        400:
          description: None Resources

  /{agency_code}/{interview_id}/{student_code}:
    get:
      tags:
        - Yves-Saint-Laurent
      summary: 면접관이 면접자 평가한 것 가져오기
      description: answer to interview question
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interivew_id
          required: true
          schema:
            type: integer
        - name: question_num
          in: query
          description: question_num
          required: true
          schema:
            type: integer
        - name: student_code
          in: path
          description: student_code
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 평가 가져오기
          content:
            application/json:
              schema:
                type: object
                properties:
                  evaluations:
                    type: array
                    items:
                       properties:
                          question_content:
                            type: string
                            example: "간단하게 자기소개를 해주세요."
                          questino_id:
                            type: integer
                            example: 3234
                          quesiton_type:
                            type: integer
                            example: 1
                          question_num:
                            type: integer
                            example: 2
                          evaluation:
                            type: string
                            example: "A"
        400:
          description: check json format

    put:
      tags:
        - Yves-Saint-Laurent
      summary: 면접관이 면접자 평가수정
      description: answer to interview question
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interivew_id
          required: true
          schema:
            type: integer
        - name: question_num
          in: query
          description: question_num
          required: true
          schema:
            type: integer
        - name: student_code
          in: path
          description: student_code
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                evaluations:
                  type: array
                  items:
                    properties:
                      questino_id:
                        type: integer
                        example: 3234
                      evaluation:
                        type: string
                        example: "A"
      responses:
        201:
          description: Successful evaluation change
        400:
          description: Check json format

    post:
      tags:
          - Yves-Saint-Laurent
      summary: 면접관이 면접자 평가하기
      description: answer to interview question
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interivew_id
        required: true
        schema:
          type: integer
      - name: question_num
        in: query
        description: question_num
        required: true
        schema:
          type: integer
      - name: student_code
        in: path
        description: student_code
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                evaluations:
                  type: array
                  items:
                    properties:
                      questino_id:
                        type: integer
                        example: 3234
                      evaluation:
                        type: string
                        example: "A"
      responses:
        201:
          description: Successful evaluation
        400:
          description: Check json format

  /{agency_code}/{interview_id}:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: 면접자 검색
      description: search interviewee
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interivew_id
        required: true
        schema:
          type: integer
      - name: interviewee
        in: query
        description: interviewee
        required: true
        schema:
          type: integer
      responses:
        200:
          description: find interviewee
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewee_name:
                    type: string
                    example: "오경태"
                  student_code:
                    type: integer
                    example: 2832
        400:
          description: an interviewee without


  /admin/{agency_code}/done/interview:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: 끝난 면접 리스트
      description: get an done interview list with an agency
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: get done interview
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    interview:
                      type: array
                      items:
                        properties:
                            interview_name:
                              type: string
                              example: "대전일반전형면접"
                            interivew_explanation:
                              type: string
                              example: "대전 일반 전형에 대한 면접입니다."
        400:
          description: None Resources

  /admin/{agency_code}/interview:
    post:
      tags:
          - Yves-Saint-Laurent
      summary: 면접 생성
      description: create interview
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      requestBody:
          content:
            application/json:
               schema:
                 type: object
                 properties:
                  name:
                    type: string
                    example: "대전 일반전형 면접1실"
                  start_date:
                    type: string
                    example: "2019-07-23"
                  end_date:
                    type: string
                    example: "2019-08-30"
      responses:
        201:
          description: Successful create interview
        400:
          description: Check json format

  /admin/{agency_code}/{interview_id}/question:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: 면접 질문 생
      description: create interview qeustion
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                questions:
                  type: array
                  items:
                    properties:
                      question_content:
                        type: string
                        example: "간단하게 자기소개를 해주세요."
                      quesiton_type:
                        type: integer
                        example: 1
                      question_num:
                        type: integer
                        example: 2
                      check_list:
                        type: array
                        items:
                          type: string
                          example: "친절한가?"
      responses:
        201:
          description: Successful change question
        400:
          description: Cheak json format


    get:
      tags:
          - Yves-Saint-Laurent
      summary: 면접 질문 가져오기
      description: get interview question
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interview_id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: get interview quesiton list
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      properties:
                        question_content:
                          type: string
                          example: "간단하게 자기소개를 해주세요."
                        quesiton_type:
                          type: integer
                          example: 1
                        question_num:
                          type: integer
                          example: 2
                        question_id:
                          type: integer
                          example: 5
                        check_list:
                          type: array
                          items:
                            type: string
                            example: "친절한가?"
        400:
          description: None Resources

    put:
      tags:
            - Yves-Saint-Laurent
      summary: 면접 정보 수정
      description: modified interview qeustion
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interview_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                questions:
                  type: array
                  items:
                    properties:
                      question_content:
                        type: string
                        example: "간단하게 자기소개를 해주세요."
                      quesiton_type:
                        type: integer
                        example: 1
                      question_num:
                        type: integer
                        example: 2
                      check_list:
                        type: array
                        items:
                          type: string
                          example: "친절한가?"
      responses:
        201:
          description: Successful change question
        400:
          description: Cheak json format

  /admin/{agency_code}/{interview_id}/{question_id}:
    delete:
      tags:
            - Yves-Saint-Laurent
      summary: 질문 삭제
      description: delete interview qeustion
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interview_id
        required: true
        schema:
          type: string
      - name: question_id
        in: path
        description: quesion_id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successful delete question
        400:
          description: Cheak json format

  /agency/apply:
    post:
      tags:
          - Yves-Saint-Laurent
      summary: 기관에 가입 신청하기
      description: To apply to an agency
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      requestBody:
          content:
            application/json:
               schema:
                 type: object
                 properties:
                  agency_code:
                    type: string
                    example: "EXEGS23"
      responses:
        201:
          description: Successful change question
        400:
          description: It's agency that doesn't exist.

  /interviewer/signup:
    post:
      tags:
          - Yves-Saint-Laurent
      summary: 면접관 가입
      description: signup to interviewer
      requestBody:
          content:
            application/json:
               schema:
                 type: object
                 properties:
                  name:
                    type: string
                    example: "이채은"
                  eamil:
                    type: string
                    example: "entry@dsm.hs.kr"
                  password:
                    type: string
                    example: "1234qwer"
                  agency:
                    type: integer
                    example: 20392
      responses:
        201:
          description: Successful signup to interviwer
        400:
          description: Check json format
        409:
          description: This email has already been signed up.

  /admin/signup:
    post:
      tags:
          - Yves-Saint-Laurent
      summary: 어드민 회원가입
      description: signup to admin
      requestBody:
          content:
            application/json:
               schema:
                 type: object
                 properties:
                  agency_name:
                    type: string
                    example: "ENTRY"
                  agency_kind:
                    type: string
                    example: "고등학교"
                  eamil:
                    type: string
                    example: "entry@dsm.hs.kr"
                  password:
                    type: string
                    example: "1234qwer"
                  agency_explanation:
                    type: string
                    example: "즐겁고 행복한 입학전형팀"
      responses:
        201:
          description: Successful signup to admin
        400:
          description: Check json format
        409:
          description: This email has already been signed up.

  /agency_admin/login:
    post:
      tags:
          - Yves-Saint-Laurent
      summary: 어드민 로그인
      description: login to admin
      requestBody:
          content:
            application/json:
               schema:
                 type: object
                 properties:
                  eamil:
                    type: string
                    example: "entry@dsm.hs.kr"
                  password:
                    type: string
                    example: "1234qwer"
      responses:
        200:
          description: Successful login to admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "3924802pedlefsdnkfsnlndlk"
                  refresh_token:
                    type: string
                    example: "304923j92030498920394830984"
        400:
          description: Cheak eamil and password

  /interviewer/login:
    post:
      tags:
          - Yves-Saint-Laurent
      summary: 면접관 로그인
      description: login to interviewer
      requestBody:
          content:
            application/json:
               schema:
                 type: object
                 properties:
                  eamil:
                    type: string
                    example: "entry@dsm.hs.kr"
                  password:
                    type: string
                    example: "1234qwer"
      responses:
        200:
          description: Successful login to interviewer
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "3924802pedlefsdnkfsnlndlk"
                  refresh_token:
                    type: string
                    example: "304923j92030498920394830984"
        400:
          description: Cheak eamil and password

  /admin/{agency_code}/done/{interview_id}/download:
    get:
      tags:
        - Yves-Saint-Laurent
      summary: 면접 결과 엑셀로 다운로드
      description: download to done intervew
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 면접 결과 엑셀 파일
          content:
            excel/xlsx:
              schema:
                type: string
                format: binary
        400:
          description: Cannot download

  /admin/{agency_code}/{interview_id}/access:
    get:
      tags:
        - Yves-Saint-Laurent
      summary: 면접에 접근할 수 있는 면접관 리스트보기
      description: 면접에 접근할 수 있는 면접관 리스트보기
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 면접에 접근 할 수 있는 면접관 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewer:
                    type: array
                    items:
                      properties:
                        interviewer_name:
                          type: string
                          example: "이채은"
                        interviewer_email:
                          type: string
                          example: "eunjuoi@dsm.hs.kr"
        400:
          description: "None interviewer"

    post:
      tags:
        - Yves-Saint-Laurent
      summary: 면접에 접근 할 면접관 추가
      description: 면접에 접근 할 면접관 추가
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                interviewer_email:
                  type: string
                  example: "eiowdnks@dsm.hs.kr"
      responses:
        200:
          description: "Successful interviewer access"

    delete:
      tags:
        - Yves-Saint-Laurent
      summary: 면접에 접근하는 면접관 삭제
      description: 면접에 접근하는 면접관 삭제
      security: [
      {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                interviewer_email:
                  type: string
                  example: "eiowdnks@dsm.hs.kr"
      responses:
        200:
          description: "Successful delete access interviewer"
        400:
          description: "None interviewer"

  /refresh:
    patch:
      tags:
        - Yves-Saint-Laurent
      summary: 엑세스 토큰 재발급
      description: 엑세스 토큰 재발급
      security: [
      {RefreshJSONWebTokenAuthentication: []}
      ]
      responses:
        201:
          description: Login succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "DIDLKSNEIO"
                  refresh:
                    type: string
                    example: "DLWIENDSKLd"


  /auth/login:
    post:
      tags:
        - 어드민 인증
      servers:
        - url: "https://rolex.entrydsm.hs.kr/api/v1"
      summary: 로그인
      requestBody:
        content:
          application/json:
            schema:    
              type: object
              required:
                - id
                - password
              properties:
                id:
                  type: string
                  format: id
                password:
                  type: string
                  format: password
      responses:
        201:
          description: Login succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "ThIsIs.TrUlY.AcCeSsToKeN"
                  refresh:
                    type: string
                    example: "ThIsIs.TrUlY.ReFrEsHtOkEn"
        403:
          description: Login information is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNotFound"
  
  /auth/refresh:
    patch:
      tags:
        - 어드민 인증
      servers:
        - url: "https://rolex.entrydsm.hs.kr/api/v1"
      summary: 리프레쉬 토큰 (AccessToken 재발급)
      security: [
        {RefreshJSONWebTokenAuthentication: []}
      ]
      responses:
        201:
          description: Refresh succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "ThIsIs.TrUlY.AcCeSsToKeN"
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired"

  /stats/applicants:
    get:
      tags:
        - 지원 통계 
      servers:
        - url: "https://rolex.entrydsm.hs.kr/api/v1"
      summary: 지역별 지원자 수 가져오기
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: region
          in: query
          example: daejeon
          description: region=daejeon or region=nation
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  applicants:
                    type: number
                    example: 187
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired" 
    
  /stats/all:
    get:
      tags:
        - 지원 통계 
      servers:
        - url: "https://rolex.entrydsm.hs.kr/api/v1"
      summary: 전체 지원 통계 리스트 가져오기 
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  daejeon:
                    properties:
                      meister:
                        type: number
                        example: 10
                      social:
                        type: number
                        example: 11
                      common:
                        type: number
                        example: 53
                  nation:
                    properties:
                      meister: 
                        type: number
                        example: 25
                      social:
                        type: number
                        example: 17
                      common:
                        type: number
                        example: 104
                  total: 
                    properties:
                      daejeon:
                        type: number
                        example: 74
                      nation:
                        type: number
                        example: 146
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired"  

  /stats/competition:
    get:
      tags:
        - 지원 통계 
      servers:
      - url: "https://rolex.entrydsm.hs.kr/api/v1"
      summary: 지원 경쟁률 가져오기
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  daejeon:
                    properties:
                      meister:
                        type: string
                        example: "1:1"
                      social:
                        type: string
                        example: "2.8:1"
                      common:
                        type: string
                        example: "2.9:1"
                  nation:
                    properties:
                      meister: 
                        type: string
                        example: "1.8:1"
                      social:
                        type: string
                        example: "4:1"
                      common:
                        type: string
                        example: "4.9:1"
                  total: 
                    properties:
                      daejeon:
                        type: string
                        example: "2.3:1"
                      nation:
                        type: string
                        example: "3:1"
                      all:
                        type: string
                        example: "2.75:1"  
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired"                  

  /list/applicants:
    get:
      tags:
        - 지원자 리스트 
      servers:
      - url: "https://rolex.entrydsm.hs.kr/api/v1"
      summary: 지원자 리스트 가져오기
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: region 
        in: query
        description: region (daejeon / nation)
        schema:
          type: string
          example: daejeon
      - name: type
        in: query
        description: type (common / meister / social)
        schema:
          type: string
          example: common
      - name: status
        in: query
        description: status (0:not_paid, 1:not_arrived)
        schema:
          type: string
          example: 0
      responses:
        200:
          description: Success
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    examcode:
                      type: string
                      example: "1234"
                    name:
                      type: string
                      example: "홍길동"
                    email:
                      type: string
                      example: "docs@naver.com"
                    region:
                      type: string
                      example: "nation"
                    type:
                      type: string
                      example: "social"
                    is_printed_application_arrived:
                      type: boolean
                      example: true
                    is_paid:
                      type: boolean
                      example: false
                    is_final_submit:
                      type: boolean
                      example: false

  /info/application:
    get:
      tags:
        - 특정 지원자 정보
      servers:
      - url: "https://rolex.entrydsm.hs.kr/api/v1"  
      summary: 특정 지원자 원서 가져오기
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      parameters:
        - name: email
          in: query
          example: docs@naver.com
          description: applicant email same as user email.
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    type: object
                    properties:
                      user_email: 
                        type: string
                        example: kim@seonghyeon.dev
                      apply_time: 
                        type: string
                        example: "COMMON"
                      additinal_type: 
                        type: string
                        example: "NOT_APPLICABLE"
                      is_daejeon:
                        type: boolean
                        example: false
                      name:
                        type: string
                        example: "홍길동"
                      sex:
                        type: string
                        example: "MALE"
                      birth_date:
                        type: string
                        example: "2019-10-02T15:00:00.000Z"
                      parent_name:
                        type: string
                        example: "홍판서"
                      parent_tel:
                        type: string
                        example: "01011110987"
                      applicant_tel:
                        type: string
                        example: "01011110987"
                      address:
                        type: string
                        example: "경기도 용인시 기흥구 동백평촌로 11"
                      post_code:
                        type: string
                        example: "55555"
                      student_number:
                        type: string
                        example: "30203"
                      graduated_year:
                        type: string
                        example: "2019"
                      school_name: 
                        type: string
                      school_tel:
                        type: string
                        example: "01011110987"
                      korean:
                        type: string
                        example: "AAAAAA"
                      social:
                        type: string
                        example: "AAAAAA"
                      history:
                        type: string
                        example: "AAAAAA"
                      math:
                        type: string
                        example: "AAAAAA"
                      science:
                        type: string
                        example: "AAAAAA"
                      tech_and_home:
                        type: string
                        example: "AAAAAA"
                      english:
                        type: string
                        example: "AAAAAA"
                      self_introduction: 
                        type: string
                      study_plan:
                        type: string
                  score:
                    type: object
                    properties:
                      final_score:
                          type: string
                          example: "103.85000"
        404:
          description: Any application submitted yet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNotFound"
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenError"     
                  - $ref: "#/components/schemas/TokenExpired"
  /submit:
    delete:
      tags:
        - 원서 접수 취소
      summary: 원서 최종 제출 취소
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: email
        in: query
        description: 지원자 email
        schema:
          type: string
          example: docs@naver.com
      responses:
        204:
          description: Final Submit Cancel succeed.    
  
  /info/status:
    patch:
      tags:
        - 특정 지원자 정보
      summary: 미납, 원서 미도착 상태 수정
      security: [
        {JSONWebTokenAuthentication: []}
      ]
      parameters:
      - name: email
        in: query
        description: 지원자 email
        schema:
          type: string
          example: huewilliams@naver.com
      - name: status
        in: query
        description: 0-미납 수정,1-원서 미도착 수정, 원래 상태의 반대로 변경됨.
        schema:
          type: string
          example: 0
      responses:
        201:
          description: status change success

components:
  securitySchemes:
    JSONWebTokenAuthentication:
      type: apiKey
      in: header
      name: Authorization
    RefreshJSONWebTokenAuthentication:
      type: apiKey
      in: header
      name: X-Refresh-Token

  schemas:
    Classification:
      type: object
      properties:
        apply_type:
          type: string
          example: COMMON
          enum:
            - COMMON
            - MEISTER
            - SOCIAL_ONE_PARENT
            - SOCIAL_FROM_NORTH
            - SOCIAL_MULTICULTURAL
            - SOCIAL_BASIC_LIVING
            - SOCIAL_LOWEST_INCOME
            - SOCIAL_TEEN_HOUSEHOLDER
        additional_type:
          type: string
          example: NOT_APPLICABLE
          enum:
            - NATIONAL_MERIT
            - PRIVILEGED_ADMISSION
            - NOT_APPLICABLE
        is_daejeon:
          type: boolean
          example: False

    PersonalInformation:
      type: object
      properties:
        name:
          type: string
          example: 홍길동
        sex:
          type: string
          enum:
            - MALE
            - FEMALE
        birth_date:
          type: string
          format: date
        parent_name:
          type: string
          example: 홍판서
        parent_tel:
          type: string
          pattern: '^01\d{8,9}$'
          example: "01011110987"
        applicant_tel:
          type: string
          pattern: '^01\d{8,9}$'
          example: "01011110987"
        address:
          type: string
          example: "경기도 용인시 기흥구 동백평촌로 11"
        post_code:
          type: string
          pattern: '^\d{5}$'
          example: "55555"

    PersonalInformationWithCurrentSchoolInfo:
      allOf:
        - $ref: "#/components/schemas/PersonalInformation"
        - type: object
          properties:
            student_number:
              type: string
              pattern: '^\d{5}$'
              example: "30202"
            school_name:
              type: string
            school_tel:
              type: string
              pattern: '^01\d{8,9}$'
              example: "01011110987"

    PersonalInformationWithGraduatedSchoolInfo:
      allOf:
        - $ref: "#/components/schemas/PersonalInformationWithCurrentSchoolInfo"
        - type: object
          properties:
            graduated_year:
              type: string
              pattern: '^\d{4}$'
              example: "2019"

    GEDGrade:
      type: object
      properties:
        ged_average_score:
          type: number

    DiligenceGrade:
      type: object
      properties:
        volunteer_time:
          type: integer
        full_cut_count:
          type: integer
        period_cut_count:
          type: integer
        late_count:
          type: integer
        early_leave_count:
          type: integer

    ScoreWith5Semister:
      type: array
      items:
        type: string
        enum:
          - A
          - B
          - C
          - D
          - E
          - X
      maxLength: 5
      minLength: 5
      example: ["A", "A", "A", "A", "A"]

    UngraduatedSchoolGrade:
      type: object
      properties:
        korean:
          $ref: "#/components/schemas/ScoreWith5Semister"
        social:
          $ref: "#/components/schemas/ScoreWith5Semister"
        history:
          $ref: "#/components/schemas/ScoreWith5Semister"
        math:
          $ref: "#/components/schemas/ScoreWith5Semister"
        science:
          $ref: "#/components/schemas/ScoreWith5Semister"
        tech_and_home:
          $ref: "#/components/schemas/ScoreWith5Semister"
        english:
          $ref: "#/components/schemas/ScoreWith5Semister"

    ScoreWith6Semister:
      type: array
      items:
        type: string
        enum:
          - A
          - B
          - C
          - D
          - E
          - X
      maxLength: 6
      minLength: 6
      example: ["A", "A", "A", "A", "A", "A"]

    GraduatedSchoolGrade:
      type: object
      properties:
        korean:
          $ref: "#/components/schemas/ScoreWith6Semister"
        social:
          $ref: "#/components/schemas/ScoreWith6Semister"
        history:
          $ref: "#/components/schemas/ScoreWith6Semister"
        math:
          $ref: "#/components/schemas/ScoreWith6Semister"
        science:
          $ref: "#/components/schemas/ScoreWith6Semister"
        tech_and_home:
          $ref: "#/components/schemas/ScoreWith6Semister"
        english:
          $ref: "#/components/schemas/ScoreWith6Semister"

    SelfIntroductionAndStudyPlan:
      type: object
      properties:
        self_introduction:
          type: string
        study_plan:
          type: string

    GEDApplication:
      type: object
      properties:
        classification:
          $ref: "#/components/schemas/Classification"
        personal_information:
          $ref: "#/components/schemas/PersonalInformation"
        ged_grade:
          $ref: "#/components/schemas/GEDGrade"
        self_introduction_and_study_plan:
          $ref: "#/components/schemas/SelfIntroductionAndStudyPlan"

    GraduatedApplication:
      type: object
      properties:
        classification:
          $ref: "#/components/schemas/Classification"
        personal_information:
          $ref: "#/components/schemas/PersonalInformationWithGraduatedSchoolInfo"
        diligence_grade:
          $ref: "#/components/schemas/DiligenceGrade"
        school_grade:
          $ref: "#/components/schemas/GraduatedSchoolGrade"
        self_introduction_and_study_plan:
          $ref: "#/components/schemas/SelfIntroductionAndStudyPlan"

    UngraduatedApplication:
      type: object
      properties:
        classification:
          $ref: "#/components/schemas/Classification"
        personal_information:
          $ref: "#/components/schemas/PersonalInformationWithCurrentSchoolInfo"
        diligence_grade:
          $ref: "#/components/schemas/DiligenceGrade"
        school_grade:
          $ref: "#/components/schemas/UngraduatedSchoolGrade"
        self_introduction_and_study_plan:
          $ref: "#/components/schemas/SelfIntroductionAndStudyPlan"
    
    ApplicationStatus:
      type: object
      properties:
        is_paid:
          type: boolean
          example: false
        is_passed_first_apply:
          type: boolean
          example: false
        is_passed_interview:
          type: boolean
          example: false
        is_printed_application_arrived:
          type: boolean
          example: false
        is_final_submit:
          type: boolean
          example: false
        receipt_code:
          type: integer
          example: 1
        exam_code:
          type: string
          example: "124533"
          nullable: true        

    # Error Schemas
    GeneralError:
      type: object
      properties:
        error_code:
          type: integer
          description: Error codes to help BE devs. it describes detailed error
          example: 9999
        description:
          type: string
          description: Text to show users what happened
          example: Our service is currently unavailable. Please try again later.

    InvalidApplicationPatch:
      type: object
      properties:
        description: 
          type: string
          example: Invalid application submitted.
        error_code:
          type: string
          example: 1100
    
    InvalidApplicationFinalSubmit:
      type: object
      properties:
        description: 
          type: string
          example: Please fill out all column before final submit.
        error_code:
          type: string
          example: 1100

    AlreadyFinalSubmitted:
      type: object
      properties:
        description: 
          type: string
          example: Final submitted application can't be edited.
        error_code:
          type: string
          example: 1101

    ApplicationNotFound:
      type: object
      properties:
        description: 
          type: string
          example: Any application submitted yet.
        error_code:
          type: string
          example: 1102
    
    UserNotFound:
      type: object
      properties:
        description: 
          type: string
          example: Login information is incorrect.
        error_code:
          type: string
          example: 1200

    TokenExpired:
      type: object
      properties:
        description: 
          type: string
          example: Please login again.
        error_code:
          type: string
          example: 1201

    TokenError:
      type: object
      properties:
        description: 
          type: string
          example: Please login again.
        error_code:
          type: string
          example: 1202

    InvalidSignupInfo:
      type: object
      properties:
        description: 
          type: string
          example: Invalid signup request
        error_code:
          type: string
          example: 1300

    UserAlreadyExists:
      type: object
      properties:
        description: 
          type: string
          example: User already exists
        error_code:
          type: string
          example: 1300

    SignupAlreadyRequested:
      type: object
      properties:
        description: 
          type: string
          example: Signup verification email already sent
        error_code:
          type: string
          example: 1302

    InvalidVerificationKey:
      type: object
      properties:
        description: 
          type: string
          example: Invalid or expired verification key
        error_code:
          type: string
          example: 1303
