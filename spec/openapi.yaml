openapi: '3.0.0'
info:
  version: '1.0.0'

  title: api.entrydsm.hs.kr # Replace with your API title
  # Keep it simple. Don't add "API" or version at the end of the string.

  termsOfService: 'https://entrydsm.hs.kr/terms/'
  contact:
    email: entrydsm@entrydsm.hs.kr
    url: 'https://www.facebook.com/entrydsm/'
  x-logo:
    url: 'https://i.ibb.co/JxqpcqB/New-Project.png'

  description: |
    [![Build Status](https://travis-ci.org/EntryDSM/Docs.svg?branch=master)](https://travis-ci.org/EntryDSM/Docs)

    This is EntryDSM API docs! You can develop services&frontend by reading this :)

tags:
  - name: Hermes
    description: Handles all EntryDSM user(admin, applicant) related functions on the EntryDSM platform
  - name: Louis-Vuitton
    description: LV is in charge of process of entrance application
  - name: Chanel
    description: EntryDSM auth service
  - name: Gucci
    description: EntryDSM QnA service
  - name: Rolex
    description: EntryDSM admin service
  - name: Yves-Saint-Laurent
    description: EntryDSM interview service
servers:
  - url: 'https://api.entrydsm.hs.kr/api/v1'

paths:
  /admin:
    post:
      tags:
        - Hermes
      summary: Create new admin
      description: Create new admin
      security:
        - RootAdmin: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - admin_id
                - admin_email
                - admin_name
                - admin_password
                - admin_type
              properties:
                admin_id:
                  type: string
                  example: entry2019root
                  description: admin id
                admin_email:
                  type: string
                  example: entry@entrydsm.hs.kr
                  description: admin email
                admin_name:
                  type: string
                  example: 연준모
                  description: admin name
                admin_password:
                  type: string
                  example: p@assword
                  description: admin password
                admin_type:
                  type: string
                  example: admin type
                  description: admin type, one of `ROOT`, `ADMINISTRATION`, `INTERVIEW`
      responses: # list of responses
        '201':
          description: Admin created
        '400':
          description: Bad request, check your payload
        '401':
          description: Authentication failed
        '409':
          description: Admin with requested admin_id is already exists
  /admin/batch:
    get:
      tags:
        - Hermes
      summary: Get multiple admins
      description: Get multiple admins
      security:
        - RootAdmin: []
        - Service: []
      parameters:
        - name: admin_id
          in: query
          description: admin id
          schema:
            type: string
        - name: admin_email
          in: query
          description: admin email
          schema:
            type: string
        - name: admin_name
          in: query
          description: admin name
          schema:
            type: string
        - name: admin_type
          in: query
          description: admin type, one of `ROOT`, `ADMINISTRATION`, `INTERVIEW`
          schema:
            type: string
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    admin_id:
                      type: string
                      example: entry2019root
                      nullable: true
                    admin_email:
                      type: string
                      example: entry@entrydsm.hs.kr
                      nullable: true
                    admin_name:
                      type: string
                      example: 연준모
                      nullable: true
                    admin_type:
                      type: string
                      example: ROOT
                      description: one of `ROOT`, `ADMINISTRATION`, `INTERVIEW`
                      nullable: true
        '401':
          description: Authentication failed
  /admin/{admin_id}:
    parameters:
      - name: admin_id
        in: path
        description: admin id
        required: true
        schema:
          type: string
    get:
      tags:
        - Hermes
      summary: Get one admin
      description: Get one admin
      security:
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  admin_id:
                    type: string
                    example: entry2019root
                  admin_email:
                    type: string
                    example: entry@entrydsm.hs.kr
                  admin_name:
                    type: string
                    example: 연준모
                  admin_type:
                    type: string
                    example: ROOT
                    description: one of `ROOT`, `ADMINISTRATION`,`INTERVIEW`
        '401':
          description: Authentication failed
        '404':
          description: Admin not found
    patch:
      tags:
        - Hermes
      summary: Patch one admin
      description: Patch one admin
      security:
        - RootAdmin: []
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                admin_email:
                  type: string
                  example: entry@entrydsm.hs.kr
                  description: admin email
                  nullable: true
                admin_name:
                  type: string
                  example: 연준모
                  description: admin name
                  nullable: true
                admin_password:
                  type: string
                  example: p@assword
                  description: admin password
                  nullable: true
                admin_type:
                  type: string
                  example: admin type
                  description: admin type, one of `ROOT`, `ADMINISTRATION`, `INTERVIEW`
                  nullable: true
      responses:
        '200':
          description: Patch success
        '401':
          description: Authentication failed
        '404':
          description: Admin not found
    delete:
      tags:
        - Hermes
      summary: Delete one admin
      description: Delete one admin
      security:
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: "Delete success"
        '401':
          description: "Authentication failed"
        '404':
          description: "Admin not found"
  /admin/{admin_id}/authorization:
    parameters:
      - name: admin_id
        in: path
        description: admin id
        required: true
        schema:
          type: string
    post:
      tags:
        - Hermes
      description: Get authorty of admin login
      summary: Get authority of admin login
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        200:
          description: Authorized
        403:
          description: Authorization failed
        400:
          description: Bad request

  /admin/me:
    get:
      tags:
        - Hermes
      summary: Get my admin info - GATEWAY ONLY
      description: Get my admin info, Gateway trnas-request this to `/admin{admin_id}` with given JWT credential
      security:
        - Admin: []
      responses:
        '200':
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  admin_id:
                    type: string
                    example: entry2019root
                  admin_email:
                    type: string
                    example: entry@entrydsm.hs.kr
                  admin_name:
                    type: string
                    example: 연준모
                  admin_type:
                    type: string
                    example: ROOT
                    description: one of `ROOT`, `ADMINISTRATION`,`INTERVIEW`
        '401':
          description: Authentication failed
        '404':
          description: Admin not found

  /applicant:
    post:
      tags:
        - Hermes
      summary: Create new applicant
      description: create new applicant that verified by `Chanel` service
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: seonghyeon@entrydsm.hs.kr
                  description: applicant's email
                password:
                  type: string
                  example: p@ssword!
                  description: applicant's password
      responses:
        201:
          description: Applicant created
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: entry@entrydsm.hs.kr
                  applicant_name:
                    type: string
                    example: null
                  sex:
                    type: string
                    example: null
                  birth_date:
                    type: string
                    example: null
                  parent_name:
                    type: string
                    example: null
                  parent_tel:
                    type: string
                    example: null
                  applicant_tel:
                    type: string
                    example: null
                  address:
                    type: string
                    example: null
                  post_code:
                    type: string
                    example: null
                  image_path:
                    type: string
                    example: null
                  status:
                    type: array
                    items:
                      type: object
                      properties:
                        is_paid:
                          type: boolean
                          example: false
                        is_passed_first_apply:
                          type: boolean
                          example: false
                        is_printed_application_arrived:
                          type: boolean
                          example: false
                        is_final_submit:
                          type: boolean
                          example: false
                        receipt_code:
                          type: integer
                          example: 1
                        exam_code:
                          type: string
                          example: null
        401:
          description: Authentication failed
        409:
          description: Applicant already exists
  /applicant/batch:
    get:
      tags:
        - Hermes
      summary: Get multiple applicants
      description: Get multiple applicants
      security:
        - Admin: []
        - RootAdmin: []
        - Service: []
      parameters:
        - name: email
          in: query
          description: applicant email
          schema:
            type: string
        - name: applicant_name
          in: query
          description: applicant name
          schema:
            type: string
        - name: sex
          in: query
          description: applicant sex, must be one of `MALE` and `FEMALE`
          schema:
            type: string
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      example: entry@entrydsm.hs.kr
                    applicant_name:
                      type: string
                      example: 홍길동
                      nullable: true
                    sex:
                      type: string
                      example: MALE
                      description: one of `MALE` and `FEMALE`
                      nullable: true
                    birth_date:
                      type: string
                      example: 2019-06-08
                      description: birth date
                      nullable: true
                    parent_name:
                      type: string
                      example: 홍판서
                      description: applicnat's parent name
                      nullable: true
                    parent_tel:
                      type: string
                      example: 010-1234-5678
                      description: parent tel
                      nullable: true
                    applicant_tel:
                      type: string
                      example: 010-1234-5678
                      description: applicant tel
                      nullable: true
                    address:
                      type: string
                      example: 경기도 용인시 기흥구 구성 3로 65
                      description: address
                      nullable: true
                    post_code:
                      type: string
                      example: 17002
                      description: post code
                      nullable: true
                    image_path:
                      type: string
                      example: eee824f7ff5f48d7b1bef0de68627726
                      description: request like this, "cdn.entrydsm.hs.kr" + {image_path}
                      nullable: true
        '401':
          description: Authentication failed
  /applicant/{email}:
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    get:
      tags:
        - Hermes
      summary: Get one applicant
      description: Get one applicant
      security:
        - Admin: []
        - RootAdmin: []
        - Service: []
      responses:
        200:
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: entry@entrydsm.hs.kr
                    description: email
                  applicant_name:
                    type: string
                    example: 홍길동
                    description: name
                    nullable: true
                  sex:
                    type: string
                    example: MALE
                    description: one of `MALE` and `FEMALE`
                    nullable: true
                  birth_date:
                    type: string
                    example: 2019-06-08
                    description: birth date
                    nullable: true
                  parent_name:
                    type: string
                    example: 홍판서
                    description: applicnat's parent name
                    nullable: true
                  parent_tel:
                    type: string
                    example: 010-1234-5678
                    description: parent tel
                    nullable: true
                  applicant_tel:
                    type: string
                    example: 010-1234-5678
                    description: applicant tel
                    nullable: true
                  address:
                    type: string
                    example: 경기도 용인시 기흥구 구성 3로 65
                    description: address
                    nullable: true
                  post_code:
                    type: string
                    example: 17002
                    description: post code
                    nullable: true
                  image_path:
                    type: string
                    example: eee824f7ff5f48d7b1bef0de68627726
                    description: request like this, "cdn.entrydsm.hs.kr" + {image_path}
                    nullable: true
        401:
          description: Authentication failed
    patch:
      tags:
        - Hermes
      summary: Patch one applicant
      description: Patch one applicant
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: p@ssword
                  description: password will changed
                  nullable: true
                applicant_name:
                  type: string
                  example: 홍길동
                  description: name
                  nullable: true
                sex:
                  type: string
                  example: MALE
                  description: one of `MALE` and `FEMALE`
                  nullable: true
                birth_date:
                  type: string
                  example: 2019-06-08
                  description: birth date
                  nullable: true
                parent_name:
                  type: string
                  example: 홍판서
                  description: applicnat's parent name
                  nullable: true
                parent_tel:
                  type: string
                  example: 010-1234-5678
                  description: parent tel
                  nullable: true
                applicant_tel:
                  type: string
                  example: 010-1234-5678
                  description: applicant tel
                  nullable: true
                address:
                  type: string
                  example: 경기도 용인시 기흥구 구성 3로 65
                  description: address
                  nullable: true
                post_code:
                  type: string
                  example: 17002
                  description: post code
                  nullable: true
                image_path:
                  type: string
                  example: eee824f7ff5f48d7b1bef0de68627726
                  description: request like this, "cdn.entrydsm.hs.kr" + {image_path}
                  nullable: true
      responses:
        200:
          description: "Patch success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: entry@entrydsm.hs.kr
                    description: email
                  applicant_name:
                    type: string
                    example: 홍길동
                    description: name
                    nullable: true
                  sex:
                    type: string
                    example: MALE
                    description: one of `MALE` and `FEMALE`
                    nullable: true
                  birth_date:
                    type: string
                    example: 2019-06-08
                    description: birth date
                    nullable: true
                  parent_name:
                    type: string
                    example: 홍판서
                    description: applicnat's parent name
                    nullable: true
                  parent_tel:
                    type: string
                    example: 010-1234-5678
                    description: parent tel
                    nullable: true
                  applicant_tel:
                    type: string
                    example: 010-1234-5678
                    description: applicant tel
                    nullable: true
                  address:
                    type: string
                    example: 경기도 용인시 기흥구 구성 3로 65
                    description: address
                    nullable: true
                  post_code:
                    type: string
                    example: 17002
                    description: post code
                    nullable: true
                  image_path:
                    type: string
                    example: eee824f7ff5f48d7b1bef0de68627726
                    description: request like this, "cdn.entrydsm.hs.kr" +   {image_path}
                    nullable: true
        400:
          description: Wrong data type
        401:
          description: Authentication failed
        404:
          description: Applicant not found
    delete:
      tags:
        - Hermes
      summary: Delete one applicant
      description: Delete one applicant
      security:
        - Admin: []
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: "Delete success"
        '401':
          description: "Authentication failed"
        '404':
          description: "Applicant not found"
  /applicant/{email}/status:
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    get:
      tags:
        - Hermes
      summary: Get one applicant's status
      description: Get one applicant's status
      security:
        - Admin: []
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_paid:
                    type: boolean
                    example: false
                  is_passed_first_apply:
                    type: boolean
                    example: false
                  is_printed_application_arrived:
                    type: boolean
                    example: false
                  is_final_submit:
                    type: boolean
                    example: false
                  receipt_code:
                    type: integer
                    example: 1
                  exam_code:
                    type: string
                    example: 124533
                    nullable: true
        '401':
          description: Authentication failed
        '404':
          description: Applicant not found
    patch:
      tags:
        - Hermes
      summary: Patch one applicant's status
      description: Patch one applicant's status
      security:
        - Service: []
      requestBody:
       content:
        application/json:
          schema:
            type: object
            properties:
              is_paid:
                type: boolean
                example: false
                nullable: true
              is_passed_first_apply:
                type: boolean
                example: false
                nullable: true
              is_printed_application_arrived:
                type: boolean
                example: false
                nullable: true
              is_final_submit:
                type: boolean
                example: false
                nullable: true
              exam_code:
                type: string
                example: 124533
                nullable: true
      responses:
        200:
          description: "Patch success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_paid:
                    type: boolean
                    example: false
                  is_passed_first_apply:
                    type: boolean
                    example: false
                  is_printed_application_arrived:
                    type: boolean
                    example: false
                  is_final_submit:
                    type: boolean
                    example: false
                  receipt_code:
                    type: integer
                    example: 1
                  exam_code:
                    type: string
                    example: 124533
                    nullable: true
        400:
          description: Wrong data type
        401:
          description: Authentication failed
        404:
          description: Applicant not found
  /applicant/{email}/authorization:
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    post:
      tags:
        - Hermes
      description: Get authorty of applicant login
      summary: Get authority of applicant login
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        200:
          description: Authorized
        403:
          description: Authorization failed
        400:
          description: Bad request


  /applicant/me:
    get:
      tags:
        - Hermes
      summary: Get my applicant info - GATEWAY ONLY
      description: Get my applicant info, Gateway trnas-request this to `GET /applicant/{email}` with given JWT credential
      security:
        - Applicant: []
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: entry@entrydsm.hs.kr
                    description: email
                  applicant_name:
                    type: string
                    example: 홍길동
                    description: name
                    nullable: true
                  sex:
                    type: string
                    example: MALE
                    description: one of `MALE` and `FEMALE`
                    nullable: true
                  birth_date:
                    type: string
                    example: 2019-06-08
                    description: birth date
                    nullable: true
                  parent_name:
                    type: string
                    example: 홍판서
                    description: applicnat's parent name
                    nullable: true
                  parent_tel:
                    type: string
                    example: 010-1234-5678
                    description: parent tel
                    nullable: true
                  applicant_tel:
                    type: string
                    example: 010-1234-5678
                    description: applicant tel
                    nullable: true
                  address:
                    type: string
                    example: 경기도 용인시 기흥구 구성 3로 65
                    description: address
                    nullable: true
                  post_code:
                    type: string
                    example: 17002
                    description: post code
                    nullable: true
                  image_path:
                    type: string
                    example: eee824f7ff5f48d7b1bef0de68627726
                    description: request like this, "cdn.entrydsm.hs.kr" + {image_path}
                    nullable: true
        '401':
          description: Authentication failed
    patch:
      tags:
        - Hermes
      summary: Patch my applicant info - GATEWAY ONLY
      description: Patch my applicant info, Gateway trnas-request this to `PATCH /applicant/{email}` with given JWT credential
      security:
        - Applicant: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                applicant_name:
                  type: string
                  example: 홍길동
                  description: name
                  nullable: true
                sex:
                  type: string
                  example: MALE
                  description: one of `MALE` and `FEMALE`
                  nullable: true
                birth_date:
                  type: string
                  example: 2019-06-08
                  description: birth date
                  nullable: true
                parent_name:
                  type: string
                  example: 홍판서
                  description: applicnat's parent name
                  nullable: true
                parent_tel:
                  type: string
                  example: 010-1234-5678
                  description: parent tel
                  nullable: true
                applicant_tel:
                  type: string
                  example: 010-1234-5678
                  description: applicant tel
                  nullable: true
                address:
                  type: string
                  example: 경기도 용인시 기흥구 구성 3로 65
                  description: address
                  nullable: true
                post_code:
                  type: string
                  example: 17002
                  description: post code
                  nullable: true
      responses:
        '200':
          description: "Patch success"
        '401':
          description: "Authentication failed"
  /applicant/me/status:
    get:
      tags:
        - Hermes
      summary: Get my applicant's status - GATEWAY ONLY
      description: Get my applicant's status. Gateway trnas-request this to `GET /applicant/{email}` with given JWT credential
      security:
        - Applicant: []
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_paid:
                    type: boolean
                    example: false
                  is_passed_first_apply:
                    type: boolean
                    example: false
                  is_printed_application_arrived:
                    type: boolean
                    example: false
                  is_final_submit:
                    type: boolean
                    example: false
                  receipt_code:
                    type: integer
                    example: 1
                  exam_code:
                    type: string
                    example: 124533
                    nullable: true
        '401':
          description: Authentication failed
  /applicant/me/photo:
    put:
      tags:
        - Hermes
      summary: Change my applicnat photo - GATEWAY ONLY
      description: Change my applicnat photo, this uploads your photo to cdn and save image patho with `PATCH`/applicant/{email}
      security:
        - Applicant: []
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
              description: image
      responses:
        200:
          description: File upload success
        401:
          description: Authentication failed

  /signup:
    post:
      tags:
        - Chanel
      summary: Sign up
      description: Create a temporary user and `verification_code`, and send email the link with that code.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: by09115@jaehoon.kim
                  description: user email
                password:
                  type: string
                  example: thisIsP@ssword
                  description: user password
      responses:
        '202':
          description: E-mail sent, temp user created
        '400':
          description: Bad request
        '409':
          description: Conflict
  /signup/verify:
    get:
      tags:
        - Chanel
      summary: Verify user
      description: Verify user by verification code that sent with e-mail
      parameters:
        - name: code
          in: query
          description: validate code
          schema:
            type: string
      responses:
        '200':
          description: Account has been verified
        '401':
          description: Incorrect verification code

  /login:
    post:
      tags:
        - Chanel
      summary: Create applicant's JWT credential
      description: Get applicant's JWT credential by check applicant info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: by09115@jaehoon.kim
                  description: applicant email
                password:
                  type: string
                  example: thisIsP@ssword
                  description: applicant password
      responses:
        201:
          description: Login successed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "ThIsIs.TrUlY.AcCeSsToKeN"
                  refresh:
                    type: string
                    example: "ThIsIs.TrUlY.ReFrEsHtOkEn"
        400:
          description: Bad Request
        403:
          description: Can not find match applicant info
  /refresh:
    patch:
      tags:
        - Chanel
      summary: Refresh applicant JWT credential
      description: Refresh applicant JWT credential
      parameters:
        - name: 'X-Refresh-Token'
          in: header
          description: (e.g. "Bearer {token}")
          schema:
            type: string
      responses:
        '201':
          description: Successfuly refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "{{ access token }}"
        400:
          description: Incorrect refresh token or Missing header
  /logout:
    delete:
      tags:
        - Chanel
      summary: Destroy applicant JWT credential
      description: Destroy applicant JWT credential
      parameters:
        - name: 'X-Refresh-Token'
          in: header
          description: (e.g. "Bearer {token}")
          schema:
            type: string
      responses:
        202:
          description: Accepted
        400:
          description: Missing authorization header
        403:
          description: Incorrect refresh token
  /admin/login:
    post:
      tags:
        - Chanel
      summary: Create admin's JWT credential
      description: Get admin's JWT credential by check admin info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - admin_id
                - password
              properties:
                email:
                  type: string
                  example: by09115
                  description: admin id
                password:
                  type: string
                  example: thisIsP@ssword
                  description: admin password
      responses:
        201:
          description: Login successed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "ThIsIs.TrUlY.AcCeSsToKeN"
                  refresh:
                    type: string
                    example: "ThIsIs.TrUlY.ReFrEsHtOkEn"
        400:
          description: Bad Request
        403:
          description: Can not find match admin info
  /admin/refresh:
    patch:
      tags:
        - Chanel
      summary: Refresh admin's JWT credential
      description: Refresh admin's JWT credential
      parameters:
        - name: 'X-Refresh-Token'
          in: header
          description: (e.g. "Bearer {token}")
          schema:
            type: string
      responses:
        '201':
          description: Successfuly refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: "{{ access token }}"
        '400':
          description: Incorrect refresh token or Missing header
  /admin/logout:
    delete:
      tags:
        - Chanel
      summary: Destroy admin's JWT credential
      description: Destroy admin's JWT credential
      parameters:
        - name: 'X-Refresh-Token'
          in: header
          description: (e.g. "Bearer {token}")
          schema:
            type: string
      responses:
        202:
          description: Accepted
        400:
          description: Missing authorization header
        403:
          description: Incorrect refresh token
  /password/reset:
    get:
      tags:
        - Chanel
      summary: check the verify code's exists
      description: check the verify code
      parameters:
        - name: verify
          in: query
          example: d2_2dc
          description: 6-digit verification code
          schema:
            type: string
      responses:
        '200':
          description: "code has verified"
        '404':
          description: "code isn't exist."
    put:
      tags:
        - Chanel
      summary: Reset my applicant password
      description: Reset my applicant info
      parameters:
        - name: verify
          in: query
          example: 0cfc54
          description: 6-digit verification code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: p@ssword
                  description: password to be changed
      responses:
        '200':
          description: "Reset success"
        '401':
          description: "Authentication failed"
    post:
      tags:
        - Chanel
      summary: Send password reset verification email
      description: Send password reset verification email
      parameters:
        - name: email
          in: query
          example: entry@entrydsm.hs.kr
          description: email that registered in entrydsm
          schema:
            type: string
      responses:
        202:
          description: Email sent
        404:
          description: Applicant not found

  /applicant/{email}/classification:
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    get:
      tags:
        - Louis-Vuitton
      summary: Get applicant classification info
      description: Get applicant classification info
      security:
        - Service: []
        - Admin: []
        - RootAdmin: []
      responses:
        200:
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_ged:
                    type: boolean
                    nullable: true
                  apply_type:
                    type: string
                    nullable: true
                  social_detail_type:
                    type: string
                    nullable: true
                  is_daejeon:
                    type: boolean
                    nullable: true
                  is_graduated:
                    type: boolean
                    nullable: true
                  additional_type:
                    type: boolean
                    nullable: true
    patch:
      tags:
        - Louis-Vuitton
      summary: Patch applicant classification info
      description: Patch applicant classification info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_ged:
                  type: boolean
                  nullable: true
                apply_type:
                  type: string
                  nullable: true
                social_detail_type:
                  type: string
                  nullable: true
                is_daejeon:
                  type: boolean
                  nullable: true
                is_graduated:
                  type: boolean
                  nullable: true
                additional_type:
                  type: boolean
                  nullable: true
      responses:
        200:
          description: Patch success
        400:
          description: Bad request
  /applicant/me/classification:
    get:
      tags:
        - Louis-Vuitton
      summary: Get my classification info - GATEWAY ONLY
      description: Get my classification info
      security:
        - Service: []
        - Admin: []
        - RootAdmin: []
      responses:
        200:
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_ged:
                    type: boolean
                    nullable: true
                  apply_type:
                    type: string
                    nullable: true
                  social_detail_type:
                    type: string
                    nullable: true
                  is_daejeon:
                    type: boolean
                    nullable: true
                  is_graduated:
                    type: boolean
                    nullable: true
                  additional_type:
                    type: boolean
                    nullable: true
    patch:
      tags:
        - Louis-Vuitton
      summary: Patch my classification info - GATEWAY ONLY
      description: Patch my classification info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_ged:
                  type: boolean
                  nullable: true
                apply_type:
                  type: string
                  nullable: true
                social_detail_type:
                  type: string
                  nullable: true
                is_daejeon:
                  type: boolean
                  nullable: true
                is_graduated:
                  type: boolean
                  nullable: true
                additional_type:
                  type: boolean
                  nullable: true
      responses:
        200:
          description: Patch success
        400:
          description: Bad request

  /applicant/{email}/document:
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    get:
      tags:
        - Louis-Vuitton
      summary: Get applicant document
      description: Get applicant document
      security:
        - Service: []
        - RootAdmin: []
        - Admin: []
      responses:
        200:
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  self_introduction_text:
                    type: string
                    nullable: true
                  study_plan_text:
                    type: string
                    nullable: true
    post:
      tags:
        - Louis-Vuitton
      summary: Patch applicant document
      description: Patch applicant document
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                self_introduction_text:
                  type: string
                  nullable: true
                study_plan_text:
                  type: string
                  nullable: true
      responses:
        200:
          description: Patch success
        400:
          description: Bad request
  /applicant/me/document:
    get:
      tags:
        - Louis-Vuitton
      summary: Get my document - GATEWAY ONLY
      description: Get my document
      security:
        - Applicant: []
      responses:
        200:
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  self_introduction_text:
                    type: string
                    nullable: true
                  study_plan_text:
                    type: string
                    nullable: true
    post:
      tags:
        - Louis-Vuitton
      summary: Patch my document - GATEWAY ONLY
      description: Patch my document
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                self_introduction_text:
                  type: string
                  nullable: true
                study_plan_text:
                  type: string
                  nullable: true
      responses:
        200:
          description: Patch success
        400:
          description: Bad request
  /stats/competition:
    get:
      tags:
        - Rolex
      summary: Get competition rate of region(daejeon or nation)
      description: Get competition rate of region(daejeon or nation). get region by query.
      security:
        - Admin: []
        - RootAdmin: []
      parameters:
        - name: region
          in: query
          example: daejeon
          description: daejeon or region
          schema:
            type: string
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  rate:
                    type: number
                    example: 187
                
        '401':
          description: Authentication failed
  /stats/applicant:
    get:
      tags:
        - Rolex
      summary: Get Receipt status table information of applicant
      description: Get Receipt status table information of applicant
      security:
        - Admin: []
        - RootAdmin: []
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                type: object
                properties:
                    daejeon:
                      properties:
                        meister:
                          type: number
                          example: 10
                        social:
                          type: number
                          example: 11
                        common:
                          type: number
                          example: 53
                    nation:
                      properties:
                        meister: 
                          type: number
                          example: 25
                        social:
                          type: number
                          example: 17
                        common:
                          type: number
                          example: 104
                    total: 
                      properties:
                        daejeon:
                          type: number
                          example: 74
                        nation:
                          type: number
                          example: 146
  /stats/rate:
    get:
      tags:
        - Rolex
      summary: Get Receipt status table information of rate
      description: Get Receipt status table information of rate
      security:
        - Admin: []
        - RootAdmin: []
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                type: object
                properties:
                    daejeon:
                      properties:
                        meister:
                          type: string
                          example: "1:1"
                        social:
                          type: string
                          example: "2.8:1"
                        common:
                          type: string
                          example: "2.9:1"
                    nation:
                      properties:
                        meister: 
                          type: string
                          example: "1.8:1"
                        social:
                          type: string
                          example: "4:1"
                        common:
                          type: string
                          example: "4.9:1"
                    total: 
                      properties:
                        daejeon:
                          type: string
                          example: "2.3:1"
                        nation:
                          type: string
                          example: "3:1"
                        all:
                          type: string
                          example: "2.75:1"  
                          
  /student:
    get:
      tags:
        - Rolex
      summary: Get multiple applicants 
      description: Get mutiple applicants information for make list of student. Set search option by querystring
      security:
        - Admin: []
        - RootAdmin: []
      parameters:
        - name: name
          in: query
          description: applicant name
          schema:
            type: string
        - name: region
          in: query
          description: applicant region, must be one of `daejeon` and `nation`
          schema:
            type: string
        - name: type
          in: query
          description: applicant type, must be one of `common` and `meister` and `social`
          schema:
            type: string
        - name: status
          in: query
          description: applicant status (bitflag), `11` - 원서 결제 ok, `10` - 원서 ok, `01` - 결제 ok
          schema:
            type: string    
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    code:
                      type: string
                      example: "1234"
                    name: 
                      type: string
                      example: "홍길동"
                    region:
                      type: string
                      example: "nation"
                    type:
                      type: string
                      example: "social"
                    arrive:
                      type: number
                      example: 1
                    paid:
                      type: number
                      example: 1
                    submit:
                      type: number
                      example: 1
                
        '401':
          description: Authentication failed
  /student/{email}:
    get:
      tags:
        - Rolex
      summary: Get Information of one student
      description: Get Detail Information of one student by applicant email
      security:
        - Admin: []
        - RootAdmin: []
      parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                type: object
                properties:
                    info:
                      properties:
                        name:
                          type: string
                          example: "홍길동"
                        image_path:
                          type: string
                          example: "eee824f7ff5f48d7b1bef0de68627726"
                        email:
                          type: string
                          example: "entry@entrydsm.hs.kr"
                        sex: 
                          type: string
                          example: male
                        birth_date:
                          type: object
                          example: {}
                        parent_tel: 
                          type: string
                          example: "010-1234-5678"
                        academic_tel:
                          type: string
                          example: "070-123-456"
                    score:
                      properties:
                        volunteer_time:
                          type: number
                          example: 60
                        full:
                          type: number
                          example: 0
                        period:
                          type: number
                          example: 0
                        late: 
                          type: number
                          example: 0
                        leave:
                          type: number
                          example: 0
                    status:
                      properties:
                        arrive:
                          type: number
                          example: 1
                        paid:
                          type: number
                          example: 0
        '401':
          description: Authentication failed

  /student/{email}/document:
    get:
      tags:
        - Rolex
      summary: Get Document of one student
      description: Get Detail Information of one student by applicant email
      security:
        - Admin: []
        - RootAdmin: []
      parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                type: object
                properties:             
                  intro:
                    type: string
                    example: "저는 000 입니다. 제가 이 학교 ~"
                  plan:
                    type: string
                    example: "저는 이 학교에서 000을 공부하고 ~"
  /student/{email}/submit:
    patch:
      tags:
        - Rolex
      summary: Cancel sumbit application
      description: Cancel sumbit application
      security:
        - Admin: []
        - RootAdmin: []
      parameters:
        - name: email
          required: true
          in: path
          description: applicant email
          schema:
            type: string
      responses:
        '201':
          description: sumbit cancel success
        '401':
          description: Authentication failed
  
  /agency/cheak:
    get:
      tags:
        - Yves-Saint-Laurent
      summary: Check agency code
      description: Check agency code
      parameters: 
        - name: code
          in : query
          example: ENTRY19
          description: agency code
          schema:
            type: string
      responses:
        200:
          description: check agency succese
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency_name:
                    type: string
                    example: "ENTRYDSM"
                  agnecy_explanation:
                    type: string
                    example: "학교입학전형을 만드는 엔트리 개발팀입니다."
        404:
          description: unseen agency
                  
  /admin/{agency_code}/interviewer/accept: 
    post:
      tags:
        - Yves-Saint-Laurent
      summary: accept interviewer
      description: acceptance of interviewer
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
             schema:
               type: object
               properties:
                 user_email:
                  type: string
                  example: "eunjuoi0515@gmail.com"
      responses:
        200:
          description: Successful interviewer accept
        400:
          description: Bad request
          
  /admin/{agency_code}/interviewer/reject:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: reject interviewer
      description: be rejected by the agency
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
             schema:
               type: object
               properties:
                 user_email:
                  type: string
                  example: "eunjuoi0515@gmail.com"
      responses:
        200:
          description: Successful interviewer reject
        400:
          description: Bad request
  
  /admin/{agency_code}/interviewer:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: an applicant interviewer
      description: an applicant interviewer list
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      responses:
        200:
          description: applicant interviewer list
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewer:
                    type: array
                    items:
                      properties:
                          interviewer_name:
                              type: string
                              example: "이채은"
                              
  /admin/{agency_code}:
    delete:
      tags:
        - Yves-Saint-Laurent
      summary: delete agency
      description: delete agency
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful agency delete
    get:
      tags:
      - Yves-Saint-Laurent
      summary: get agency information
      description: get agency information
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200: 
          description: get agency information
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency_name:
                    type: string
                    example: "DSM"
                  agency_kind:
                    type: string
                    example: "학교/특수목적고등학교"
                  agency_code:
                    type: string
                    example: "1EDOLW"
  
  /agency:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: interviewer belonged agency
      description: View the agency the interviewer subscribes to
      responses:
        200:
          description: get interviewer belonged agency
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency:
                    type: array
                    items:
                      properties:
                          agency_name:
                              type: string
                              example: "Entry"
  
  /{agency_code}:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: get an ongoing interview with an agency
      description: get an ongoing interview with an agency
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: get ongoing interview
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    interview:
                      type: array
                      items:
                        properties:
                            interview_name:
                              type: string
                              example: "대전일반전형면접"
                            interivew_explanation:
                              type: string
                              example: "대전 일반 전형에 대한 면접입니다."
  
  /admin/{agency_code}/ready/interview:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: get an ready interview list
      description: get an ready interview list with an agency
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: get ready interview
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    interview:
                      type: array
                      items:
                        properties:
                            interview_name:
                              type: string
                              example: "대전일반전형면접"
                            interivew_explanation:
                              type: string
                              example: "대전 일반 전형에 대한 면접입니다."
  
  /{agency_code}/{interview_id}/{question_num}:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: get interview question
      description: get interview question
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interivew_id
        required: true
        schema:
          type: integer
      - name: question_num
        in: path
        description: question_num
        required: true
        schema:
          type: integer
      responses:
        200:
          description: get interivew question 
          content:
            application/json:
              schema:
                type: object
                properties:
                  question:
                    type: string
                    example: "간단하게 자기소개를 해주세요."
                    
  /{agency_code}/{interview_id}/{question_num}/{student_code}:
    post:
      tags:
          - Yves-Saint-Laurent
      summary: answer to interview question
      description: answer to interview question
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interivew_id
        required: true
        schema:
          type: integer
      - name: question_num
        in: path
        description: question_num
        required: true
        schema:
          type: integer
      - name: student_code
        in: path
        description: student_code
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
             schema:
               type: object
               properties:
                 answer:
                  type: string
                  example: "저는 부산에서자라~"
      responses:
        200:
          description: Successful answer
    
  /{agency_code}/{interview_id}:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: search interviewee
      description: search interviewee
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      - name: interview_id
        in: path
        description: interivew_id
        required: true
        schema:
          type: integer
      - name: interviewee
        in: query
        description: interviewee
        required: true
        schema:
          type: integer
      responses:
        200: 
          description: find interviewee
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewee_name:
                    type: string
                    example: "오경태"
        409:
          description: already evaluated interviewee
        400:
          description: an interviewee without
  
  /admin/{agency_code}/done/interview:
    get:
      tags:
          - Yves-Saint-Laurent
      summary: get an done interview list
      description: get an done interview list with an agency
      parameters:
      - name: agency_code
        in: path
        description: agency_code
        required: true
        schema:
          type: string
      responses:
        200:
          description: get done interview
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    interview:
                      type: array
                      items:
                        properties:
                            interview_name:
                              type: string
                              example: "대전일반전형면접"
                            interivew_explanation:
                              type: string
                              example: "대전 일반 전형에 대한 면접입니다."

components:
  securitySchemes:
    Public:
      type: apiKey
      in: header
      name: Authorization
      description: If endpoint makred as this, it can be accessed by anyone
    Applicant:
      type: apiKey
      in: header
      name: Authorization
      description: If endpoint marked as this, it can be accessed with applicant authority
    Admin:
      type: apiKey
      in: header
      name: Authorization
      description: If endpoint marked as this, it can be accessed with normal admin authority
    Interviewer:
      type: apiKey
      in: header
      name: Authorization
      description: If endpoint marked as this, it can be accessed with interview admin authority
    RootAdmin:
      type: apiKey
      in: header
      name: Authorization
      description: If endpoint marked as this, it can be accessed with root admin authority
    Service:
      type: apiKey
      in: header
      name: Authorization
      description: If endpoint marked as this, it can be accessed with inter service authority
