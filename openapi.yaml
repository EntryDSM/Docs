openapi: 3.0.0
info:
  version: 1.0.0
  title: api.entrydsm.hs.kr
  termsOfService: 'https://entrydsm.hs.kr/terms/'
  contact:
    email: entrydsm@entrydsm.hs.kr
    url: 'https://www.facebook.com/entrydsm/'
  x-logo:
    url: 'https://i.ibb.co/JxqpcqB/New-Project.png'
  description: |
    [![Build Status](https://travis-ci.org/EntryDSM/Docs.svg?branch=master)](https://travis-ci.org/EntryDSM/Docs)

    This is EntryDSM API docs! You can develop services&frontend by reading this :)
tags:
  - name: Hermes
    description: 'Handles all EntryDSM user(admin, applicant) related functions on the EntryDSM platform'
  - name: Louis-Vuitton
    description: LV is in charge of process of entrance application
  - name: Chanel
    description: EntryDSM auth service
  - name: Gucci
    description: EntryDSM QnA service
  - name: Rolex
    description: EntryDSM admin service
  - name: Yves-Saint-Laurent
    description: EntryDSM interview service
servers:
  - url: 'https://api.entrydsm.hs.kr/api/v1'
paths:
  /admin:
    post:
      tags:
        - Hermes
      summary: Create new admin
      description: Create new admin
      security:
        - RootAdmin: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - admin_id
                - admin_email
                - admin_name
                - admin_password
                - admin_type
              properties:
                admin_id:
                  type: string
                  example: entry2019root
                  description: admin id
                admin_email:
                  type: string
                  example: entry@entrydsm.hs.kr
                  description: admin email
                admin_name:
                  type: string
                  example: 연준모
                  description: admin name
                admin_password:
                  type: string
                  example: p@assword
                  description: admin password
                admin_type:
                  type: string
                  example: admin type
                  description: 'admin type, one of `ROOT`, `ADMINISTRATION`, `INTERVIEW`'
      responses:
        '201':
          description: Admin created
        '400':
          description: 'Bad request, check your payload'
        '401':
          description: Authentication failed
        '409':
          description: Admin with requested admin_id is already exists
  /admin/batch:
    get:
      tags:
        - Hermes
      summary: Get multiple admins
      description: Get multiple admins
      security:
        - RootAdmin: []
        - Service: []
      parameters:
        - name: admin_id
          in: query
          description: admin id
          schema:
            type: string
        - name: admin_email
          in: query
          description: admin email
          schema:
            type: string
        - name: admin_name
          in: query
          description: admin name
          schema:
            type: string
        - name: admin_type
          in: query
          description: 'admin type, one of `ROOT`, `ADMINISTRATION`, `INTERVIEW`'
          schema:
            type: string
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    admin_id:
                      type: string
                      example: entry2019root
                      nullable: true
                    admin_email:
                      type: string
                      example: entry@entrydsm.hs.kr
                      nullable: true
                    admin_name:
                      type: string
                      example: 연준모
                      nullable: true
                    admin_type:
                      type: string
                      example: ROOT
                      description: 'one of `ROOT`, `ADMINISTRATION`, `INTERVIEW`'
                      nullable: true
        '401':
          description: Authentication failed
  '/admin/{admin_id}':
    parameters:
      - name: admin_id
        in: path
        description: admin id
        required: true
        schema:
          type: string
    get:
      tags:
        - Hermes
      summary: Get one admin
      description: Get one admin
      security:
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  admin_id:
                    type: string
                    example: entry2019root
                  admin_email:
                    type: string
                    example: entry@entrydsm.hs.kr
                  admin_name:
                    type: string
                    example: 연준모
                  admin_type:
                    type: string
                    example: ROOT
                    description: 'one of `ROOT`, `ADMINISTRATION`,`INTERVIEW`'
        '401':
          description: Authentication failed
        '404':
          description: Admin not found
    patch:
      tags:
        - Hermes
      summary: Patch one admin
      description: Patch one admin
      security:
        - RootAdmin: []
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                admin_email:
                  type: string
                  example: entry@entrydsm.hs.kr
                  description: admin email
                  nullable: true
                admin_name:
                  type: string
                  example: 연준모
                  description: admin name
                  nullable: true
                admin_password:
                  type: string
                  example: p@assword
                  description: admin password
                  nullable: true
                admin_type:
                  type: string
                  example: admin type
                  description: 'admin type, one of `ROOT`, `ADMINISTRATION`, `INTERVIEW`'
                  nullable: true
      responses:
        '200':
          description: Patch success
        '401':
          description: Authentication failed
        '404':
          description: Admin not found
    delete:
      tags:
        - Hermes
      summary: Delete one admin
      description: Delete one admin
      security:
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: Delete success
        '401':
          description: Authentication failed
        '404':
          description: Admin not found
  '/admin/{admin_id}/authorization':
    parameters:
      - name: admin_id
        in: path
        description: admin id
        required: true
        schema:
          type: string
    post:
      tags:
        - Hermes
      description: Get authorty of admin login
      summary: Get authority of admin login
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Authorized
        '400':
          description: Bad request
        '403':
          description: Authorization failed
  /admin/me:
    get:
      tags:
        - Hermes
      summary: Get my admin info - GATEWAY ONLY
      description: 'Get my admin info, Gateway trnas-request this to `/admin{admin_id}` with given JWT credential'
      security:
        - Admin: []
      responses:
        '200':
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  admin_id:
                    type: string
                    example: entry2019root
                  admin_email:
                    type: string
                    example: entry@entrydsm.hs.kr
                  admin_name:
                    type: string
                    example: 연준모
                  admin_type:
                    type: string
                    example: ROOT
                    description: 'one of `ROOT`, `ADMINISTRATION`,`INTERVIEW`'
        '401':
          description: Authentication failed
        '404':
          description: Admin not found
  /applicant:
    post:
      tags:
        - Hermes
      summary: Create new applicant
      description: create new applicant that verified by `Chanel` service
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: seonghyeon@entrydsm.hs.kr
                  description: applicant's email
                password:
                  type: string
                  example: p@ssword!
                  description: applicant's password
      responses:
        '201':
          description: Applicant created
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: entry@entrydsm.hs.kr
                  applicant_name:
                    type: string
                    example: null
                  sex:
                    type: string
                    example: null
                  birth_date:
                    type: string
                    example: null
                  parent_name:
                    type: string
                    example: null
                  parent_tel:
                    type: string
                    example: null
                  applicant_tel:
                    type: string
                    example: null
                  address:
                    type: string
                    example: null
                  post_code:
                    type: string
                    example: null
                  image_path:
                    type: string
                    example: null
                  status:
                    type: array
                    items:
                      type: object
                      properties:
                        is_paid:
                          type: boolean
                          example: false
                        is_passed_first_apply:
                          type: boolean
                          example: false
                        is_printed_application_arrived:
                          type: boolean
                          example: false
                        is_final_submit:
                          type: boolean
                          example: false
                        receipt_code:
                          type: integer
                          example: 1
                        exam_code:
                          type: string
                          example: null
        '401':
          description: Authentication failed
        '409':
          description: Applicant already exists
  /applicant/batch:
    get:
      tags:
        - Hermes
      summary: Get multiple applicants
      description: Get multiple applicants
      security:
        - Admin: []
        - RootAdmin: []
        - Service: []
      parameters:
        - name: email
          in: query
          description: applicant email
          schema:
            type: string
        - name: applicant_name
          in: query
          description: applicant name
          schema:
            type: string
        - name: sex
          in: query
          description: 'applicant sex, must be one of `MALE` and `FEMALE`'
          schema:
            type: string
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      example: entry@entrydsm.hs.kr
                    applicant_name:
                      type: string
                      example: 홍길동
                      nullable: true
                    sex:
                      type: string
                      example: MALE
                      description: one of `MALE` and `FEMALE`
                      nullable: true
                    birth_date:
                      type: string
                      example: 2019-06-08T00:00:00.000Z
                      description: birth date
                      nullable: true
                    parent_name:
                      type: string
                      example: 홍판서
                      description: applicnat's parent name
                      nullable: true
                    parent_tel:
                      type: string
                      example: 010-1234-5678
                      description: parent tel
                      nullable: true
                    applicant_tel:
                      type: string
                      example: 010-1234-5678
                      description: applicant tel
                      nullable: true
                    address:
                      type: string
                      example: 경기도 용인시 기흥구 구성 3로 65
                      description: address
                      nullable: true
                    post_code:
                      type: string
                      example: 17002
                      description: post code
                      nullable: true
                    image_path:
                      type: string
                      example: eee824f7ff5f48d7b1bef0de68627726
                      description: 'request like this, "cdn.entrydsm.hs.kr" + {image_path}'
                      nullable: true
        '401':
          description: Authentication failed
  '/applicant/{email}':
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    get:
      tags:
        - Hermes
      summary: Get one applicant
      description: Get one applicant
      security:
        - Admin: []
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: entry@entrydsm.hs.kr
                    description: email
                  applicant_name:
                    type: string
                    example: 홍길동
                    description: name
                    nullable: true
                  sex:
                    type: string
                    example: MALE
                    description: one of `MALE` and `FEMALE`
                    nullable: true
                  birth_date:
                    type: string
                    example: 2019-06-08T00:00:00.000Z
                    description: birth date
                    nullable: true
                  parent_name:
                    type: string
                    example: 홍판서
                    description: applicnat's parent name
                    nullable: true
                  parent_tel:
                    type: string
                    example: 010-1234-5678
                    description: parent tel
                    nullable: true
                  applicant_tel:
                    type: string
                    example: 010-1234-5678
                    description: applicant tel
                    nullable: true
                  address:
                    type: string
                    example: 경기도 용인시 기흥구 구성 3로 65
                    description: address
                    nullable: true
                  post_code:
                    type: string
                    example: 17002
                    description: post code
                    nullable: true
                  image_path:
                    type: string
                    example: eee824f7ff5f48d7b1bef0de68627726
                    description: 'request like this, "cdn.entrydsm.hs.kr" + {image_path}'
                    nullable: true
        '401':
          description: Authentication failed
    patch:
      tags:
        - Hermes
      summary: Patch one applicant
      description: Patch one applicant
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: p@ssword
                  description: password will changed
                  nullable: true
                applicant_name:
                  type: string
                  example: 홍길동
                  description: name
                  nullable: true
                sex:
                  type: string
                  example: MALE
                  description: one of `MALE` and `FEMALE`
                  nullable: true
                birth_date:
                  type: string
                  example: 2019-06-08T00:00:00.000Z
                  description: birth date
                  nullable: true
                parent_name:
                  type: string
                  example: 홍판서
                  description: applicnat's parent name
                  nullable: true
                parent_tel:
                  type: string
                  example: 010-1234-5678
                  description: parent tel
                  nullable: true
                applicant_tel:
                  type: string
                  example: 010-1234-5678
                  description: applicant tel
                  nullable: true
                address:
                  type: string
                  example: 경기도 용인시 기흥구 구성 3로 65
                  description: address
                  nullable: true
                post_code:
                  type: string
                  example: 17002
                  description: post code
                  nullable: true
                image_path:
                  type: string
                  example: eee824f7ff5f48d7b1bef0de68627726
                  description: 'request like this, "cdn.entrydsm.hs.kr" + {image_path}'
                  nullable: true
      responses:
        '200':
          description: Patch success
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: entry@entrydsm.hs.kr
                    description: email
                  applicant_name:
                    type: string
                    example: 홍길동
                    description: name
                    nullable: true
                  sex:
                    type: string
                    example: MALE
                    description: one of `MALE` and `FEMALE`
                    nullable: true
                  birth_date:
                    type: string
                    example: 2019-06-08T00:00:00.000Z
                    description: birth date
                    nullable: true
                  parent_name:
                    type: string
                    example: 홍판서
                    description: applicnat's parent name
                    nullable: true
                  parent_tel:
                    type: string
                    example: 010-1234-5678
                    description: parent tel
                    nullable: true
                  applicant_tel:
                    type: string
                    example: 010-1234-5678
                    description: applicant tel
                    nullable: true
                  address:
                    type: string
                    example: 경기도 용인시 기흥구 구성 3로 65
                    description: address
                    nullable: true
                  post_code:
                    type: string
                    example: 17002
                    description: post code
                    nullable: true
                  image_path:
                    type: string
                    example: eee824f7ff5f48d7b1bef0de68627726
                    description: 'request like this, "cdn.entrydsm.hs.kr" +   {image_path}'
                    nullable: true
        '400':
          description: Wrong data type
        '401':
          description: Authentication failed
        '404':
          description: Applicant not found
    delete:
      tags:
        - Hermes
      summary: Delete one applicant
      description: Delete one applicant
      security:
        - Admin: []
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: Delete success
        '401':
          description: Authentication failed
        '404':
          description: Applicant not found
  '/applicant/{email}/status':
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    get:
      tags:
        - Hermes
      summary: Get one applicant's status
      description: Get one applicant's status
      security:
        - Admin: []
        - RootAdmin: []
        - Service: []
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_paid:
                    type: boolean
                    example: false
                  is_passed_first_apply:
                    type: boolean
                    example: false
                  is_printed_application_arrived:
                    type: boolean
                    example: false
                  is_final_submit:
                    type: boolean
                    example: false
                  receipt_code:
                    type: integer
                    example: 1
                  exam_code:
                    type: string
                    example: 124533
                    nullable: true
        '401':
          description: Authentication failed
        '404':
          description: Applicant not found
    patch:
      tags:
        - Hermes
      summary: Patch one applicant's status
      description: Patch one applicant's status
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_paid:
                  type: boolean
                  example: false
                  nullable: true
                is_passed_first_apply:
                  type: boolean
                  example: false
                  nullable: true
                is_printed_application_arrived:
                  type: boolean
                  example: false
                  nullable: true
                is_final_submit:
                  type: boolean
                  example: false
                  nullable: true
                exam_code:
                  type: string
                  example: 124533
                  nullable: true
      responses:
        '200':
          description: Patch success
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_paid:
                    type: boolean
                    example: false
                  is_passed_first_apply:
                    type: boolean
                    example: false
                  is_printed_application_arrived:
                    type: boolean
                    example: false
                  is_final_submit:
                    type: boolean
                    example: false
                  receipt_code:
                    type: integer
                    example: 1
                  exam_code:
                    type: string
                    example: 124533
                    nullable: true
        '400':
          description: Wrong data type
        '401':
          description: Authentication failed
        '404':
          description: Applicant not found
  '/applicant/{email}/authorization':
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    post:
      tags:
        - Hermes
      description: Get authorty of applicant login
      summary: Get authority of applicant login
      security:
        - Service: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Authorized
        '400':
          description: Bad request
        '403':
          description: Authorization failed
  /applicant/me:
    get:
      tags:
        - Hermes
      summary: Get my applicant info - GATEWAY ONLY
      description: 'Get my applicant info, Gateway trnas-request this to `GET /applicant/{email}` with given JWT credential'
      security:
        - Applicant: []
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: entry@entrydsm.hs.kr
                    description: email
                  applicant_name:
                    type: string
                    example: 홍길동
                    description: name
                    nullable: true
                  sex:
                    type: string
                    example: MALE
                    description: one of `MALE` and `FEMALE`
                    nullable: true
                  birth_date:
                    type: string
                    example: 2019-06-08T00:00:00.000Z
                    description: birth date
                    nullable: true
                  parent_name:
                    type: string
                    example: 홍판서
                    description: applicnat's parent name
                    nullable: true
                  parent_tel:
                    type: string
                    example: 010-1234-5678
                    description: parent tel
                    nullable: true
                  applicant_tel:
                    type: string
                    example: 010-1234-5678
                    description: applicant tel
                    nullable: true
                  address:
                    type: string
                    example: 경기도 용인시 기흥구 구성 3로 65
                    description: address
                    nullable: true
                  post_code:
                    type: string
                    example: 17002
                    description: post code
                    nullable: true
                  image_path:
                    type: string
                    example: eee824f7ff5f48d7b1bef0de68627726
                    description: 'request like this, "cdn.entrydsm.hs.kr" + {image_path}'
                    nullable: true
        '401':
          description: Authentication failed
    patch:
      tags:
        - Hermes
      summary: Patch my applicant info - GATEWAY ONLY
      description: 'Patch my applicant info, Gateway trnas-request this to `PATCH /applicant/{email}` with given JWT credential'
      security:
        - Applicant: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                applicant_name:
                  type: string
                  example: 홍길동
                  description: name
                  nullable: true
                sex:
                  type: string
                  example: MALE
                  description: one of `MALE` and `FEMALE`
                  nullable: true
                birth_date:
                  type: string
                  example: 2019-06-08T00:00:00.000Z
                  description: birth date
                  nullable: true
                parent_name:
                  type: string
                  example: 홍판서
                  description: applicnat's parent name
                  nullable: true
                parent_tel:
                  type: string
                  example: 010-1234-5678
                  description: parent tel
                  nullable: true
                applicant_tel:
                  type: string
                  example: 010-1234-5678
                  description: applicant tel
                  nullable: true
                address:
                  type: string
                  example: 경기도 용인시 기흥구 구성 3로 65
                  description: address
                  nullable: true
                post_code:
                  type: string
                  example: 17002
                  description: post code
                  nullable: true
      responses:
        '200':
          description: Patch success
        '401':
          description: Authentication failed
  /applicant/me/status:
    get:
      tags:
        - Hermes
      summary: Get my applicant's status - GATEWAY ONLY
      description: 'Get my applicant''s status. Gateway trnas-request this to `GET /applicant/{email}` with given JWT credential'
      security:
        - Applicant: []
      responses:
        '200':
          description: Query succeess
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_paid:
                    type: boolean
                    example: false
                  is_passed_first_apply:
                    type: boolean
                    example: false
                  is_printed_application_arrived:
                    type: boolean
                    example: false
                  is_final_submit:
                    type: boolean
                    example: false
                  receipt_code:
                    type: integer
                    example: 1
                  exam_code:
                    type: string
                    example: 124533
                    nullable: true
        '401':
          description: Authentication failed
  /applicant/me/photo:
    put:
      tags:
        - Hermes
      summary: Change my applicnat photo - GATEWAY ONLY
      description: 'Change my applicnat photo, this uploads your photo to cdn and save image patho with `PATCH`/applicant/{email}'
      security:
        - Applicant: []
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
              description: image
      responses:
        '200':
          description: File upload success
        '401':
          description: Authentication failed
  /signup:
    post:
      tags:
        - Chanel
      summary: Sign up
      description: 'Create a temporary user and `verification_code`, and send email the link with that code.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: by09115@jaehoon.kim
                  description: user email
                password:
                  type: string
                  example: thisIsP@ssword
                  description: user password
      responses:
        '202':
          description: 'E-mail sent, temp user created'
        '400':
          description: Bad request
        '409':
          description: Conflict
  /signup/verify:
    get:
      tags:
        - Chanel
      summary: Verify user
      description: Verify user by verification code that sent with e-mail
      parameters:
        - name: code
          in: query
          description: validate code
          schema:
            type: string
      responses:
        '200':
          description: Account has been verified
        '401':
          description: Incorrect verification code
  /login:
    post:
      tags:
        - Chanel
      summary: Create applicant's JWT credential
      description: Get applicant's JWT credential by check applicant info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: by09115@jaehoon.kim
                  description: applicant email
                password:
                  type: string
                  example: thisIsP@ssword
                  description: applicant password
      responses:
        '201':
          description: Login successed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: ThIsIs.TrUlY.AcCeSsToKeN
                  refresh:
                    type: string
                    example: ThIsIs.TrUlY.ReFrEsHtOkEn
        '400':
          description: Bad Request
        '403':
          description: Can not find match applicant info
  /refresh:
    patch:
      tags:
        - Chanel
      summary: Refresh applicant JWT credential
      description: Refresh applicant JWT credential
      parameters:
        - name: X-Refresh-Token
          in: header
          description: '(e.g. "Bearer {token}")'
          schema:
            type: string
      responses:
        '201':
          description: Successfuly refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: '{{ access token }}'
        '400':
          description: Incorrect refresh token or Missing header
  /logout:
    delete:
      tags:
        - Chanel
      summary: Destroy applicant JWT credential
      description: Destroy applicant JWT credential
      parameters:
        - name: X-Refresh-Token
          in: header
          description: '(e.g. "Bearer {token}")'
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: Missing authorization header
        '403':
          description: Incorrect refresh token
  /admin/login:
    post:
      tags:
        - Chanel
      summary: Create admin's JWT credential
      description: Get admin's JWT credential by check admin info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: by09115@jaehoon.kim
                  description: admin email
                password:
                  type: string
                  example: thisIsP@ssword
                  description: admin password
      responses:
        '201':
          description: Login successed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: ThIsIs.TrUlY.AcCeSsToKeN
                  refresh:
                    type: string
                    example: ThIsIs.TrUlY.ReFrEsHtOkEn
        '400':
          description: Bad Request
        '403':
          description: Can not find match admin info
  /admin/refresh:
    patch:
      tags:
        - Chanel
      summary: Refresh admin's JWT credential
      description: Refresh admin's JWT credential
      parameters:
        - name: X-Refresh-Token
          in: header
          description: '(e.g. "Bearer {token}")'
          schema:
            type: string
      responses:
        '201':
          description: Successfuly refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: '{{ access token }}'
        '400':
          description: Incorrect refresh token or Missing header
  /admin/logout:
    delete:
      tags:
        - Chanel
      summary: Destroy admin's JWT credential
      description: Destroy admin's JWT credential
      parameters:
        - name: X-Refresh-Token
          in: header
          description: '(e.g. "Bearer {token}")'
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: Missing authorization header
        '403':
          description: Incorrect refresh token
  /password/reset:
    put:
      tags:
        - Chanel
      summary: Reset my applicant password
      description: Reset my applicant info
      parameters:
        - name: verify
          in: query
          example: 0cfc54
          description: 6-digit verification code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: p@ssword
                  description: password to be changed
      responses:
        '200':
          description: Reset success
        '401':
          description: Authentication failed
    post:
      tags:
        - Chanel
      summary: Send password reset verification email
      description: Send password reset verification email
      parameters:
        - name: email
          in: query
          example: entry@entrydsm.hs.kr
          description: email that registered in entrydsm
          schema:
            type: string
      responses:
        '202':
          description: Email sent
        '404':
          description: Applicant not found
  '/applicant/{email}/classification':
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    get:
      tags:
        - Louis-Vuitton
      summary: Get applicant classification info
      description: Get applicant classification info
      security:
        - Service: []
        - Admin: []
        - RootAdmin: []
      responses:
        '200':
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_ged:
                    type: boolean
                    nullable: true
                  apply_type:
                    type: string
                    nullable: true
                  social_detail_type:
                    type: string
                    nullable: true
                  is_daejeon:
                    type: boolean
                    nullable: true
                  is_graduated:
                    type: boolean
                    nullable: true
                  additional_type:
                    type: boolean
                    nullable: true
    patch:
      tags:
        - Louis-Vuitton
      summary: Patch applicant classification info
      description: Patch applicant classification info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_ged:
                  type: boolean
                  nullable: true
                apply_type:
                  type: string
                  nullable: true
                social_detail_type:
                  type: string
                  nullable: true
                is_daejeon:
                  type: boolean
                  nullable: true
                is_graduated:
                  type: boolean
                  nullable: true
                additional_type:
                  type: boolean
                  nullable: true
      responses:
        '200':
          description: Patch success
        '400':
          description: Bad request
  /applicant/me/classification:
    get:
      tags:
        - Louis-Vuitton
      summary: Get my classification info - GATEWAY ONLY
      description: Get my classification info
      security:
        - Service: []
        - Admin: []
        - RootAdmin: []
      responses:
        '200':
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_ged:
                    type: boolean
                    nullable: true
                  apply_type:
                    type: string
                    nullable: true
                  social_detail_type:
                    type: string
                    nullable: true
                  is_daejeon:
                    type: boolean
                    nullable: true
                  is_graduated:
                    type: boolean
                    nullable: true
                  additional_type:
                    type: boolean
                    nullable: true
    patch:
      tags:
        - Louis-Vuitton
      summary: Patch my classification info - GATEWAY ONLY
      description: Patch my classification info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_ged:
                  type: boolean
                  nullable: true
                apply_type:
                  type: string
                  nullable: true
                social_detail_type:
                  type: string
                  nullable: true
                is_daejeon:
                  type: boolean
                  nullable: true
                is_graduated:
                  type: boolean
                  nullable: true
                additional_type:
                  type: boolean
                  nullable: true
      responses:
        '200':
          description: Patch success
        '400':
          description: Bad request
  '/applicant/{email}/document':
    parameters:
      - name: email
        in: path
        description: applicant email
        required: true
        schema:
          type: string
    get:
      tags:
        - Louis-Vuitton
      summary: Get applicant document
      description: Get applicant document
      security:
        - Service: []
        - RootAdmin: []
        - Admin: []
      responses:
        '200':
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  self_introduction_text:
                    type: string
                    nullable: true
                  study_plan_text:
                    type: string
                    nullable: true
    post:
      tags:
        - Louis-Vuitton
      summary: Patch applicant document
      description: Patch applicant document
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                self_introduction_text:
                  type: string
                  nullable: true
                study_plan_text:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Patch success
        '400':
          description: Bad request
  /applicant/me/document:
    get:
      tags:
        - Louis-Vuitton
      summary: Get my document - GATEWAY ONLY
      description: Get my document
      security:
        - Applicant: []
      responses:
        '200':
          description: Query success
          content:
            application/json:
              schema:
                type: object
                properties:
                  self_introduction_text:
                    type: string
                    nullable: true
                  study_plan_text:
                    type: string
                    nullable: true
    post:
      tags:
        - Louis-Vuitton
      summary: Patch my document - GATEWAY ONLY
      description: Patch my document
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                self_introduction_text:
                  type: string
                  nullable: true
                study_plan_text:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Patch success
        '400':
          description: Bad request
components:
  securitySchemes:
    Public:
      type: apiKey
      in: header
      name: Authorization
      description: 'If endpoint makred as this, it can be accessed by anyone'
    Applicant:
      type: apiKey
      in: header
      name: Authorization
      description: 'If endpoint marked as this, it can be accessed with applicant authority'
    Admin:
      type: apiKey
      in: header
      name: Authorization
      description: 'If endpoint marked as this, it can be accessed with normal admin authority'
    Interviewer:
      type: apiKey
      in: header
      name: Authorization
      description: 'If endpoint marked as this, it can be accessed with interview admin authority'
    RootAdmin:
      type: apiKey
      in: header
      name: Authorization
      description: 'If endpoint marked as this, it can be accessed with root admin authority'
    Service:
      type: apiKey
      in: header
      name: Authorization
      description: 'If endpoint marked as this, it can be accessed with inter service authority'
