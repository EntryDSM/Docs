openapi: 3.0.0
info:
  version: 1.0.0
  title: api.entrydsm.hs.kr
  termsOfService: 'https://entrydsm.hs.kr/terms/'
  contact:
    email: entrydsm@entrydsm.hs.kr
    url: 'https://www.facebook.com/entrydsm/'
  x-logo:
    url: 'https://i.ibb.co/JxqpcqB/New-Project.png'
  description: |
    # Summary

    [![Build Status](https://travis-ci.org/EntryDSM/Docs.svg?branch=master)](https://travis-ci.org/EntryDSM/Docs)

    This is EntryDSM API docs! You can develop services&frontend by reading this :)

    # Error Codes
    ## general error
    |description|code|
    |-|-|
    | unknown internal server error | 9999 |


    ## 10xx server error
    |description|code|
    |-|-|
    | redis error | 1002 |
    | mysql error | 1003 |

    ## 11xx application validation error
    |description|code|
    |-|-|
    | validation error | 1100 | 
    | already final submitted | 1101 |
    | any application submitted yet | 1102 |

    ## 12xx auth error
    |description|code|
    |-|-|
     |user not found  | 1200 |
     |token expired  | 1201 |
     |invalid token  | 1202 |

    ## 13xx signup error
    |description|code|
    |-|-|
    | invalid signup info | 1300 | 
    | user already exists | 1301 | 
    | signup already requested | 1302 | 
    | invalid verification key | 1303 | 
servers:
  - url: 'https://api.entrydsm.hs.kr/api/v1'
tags:
  - name: 회원가입
    description: 회원가입 요청과 인증
  - name: 인증
    description: '로그인, 리프레쉬, 로그아웃'
  - name: 마이페이지
    description: 전형 상태
  - name: 사진
    description: 사진 제출
  - name: 원서 가져오기
    description: 원서 데이터 가져오기
  - name: 원서 제출
    description: 원서 제출하기
  - name: 최종제출
    description: 최종제출.
  - name: ged_model
    x-displayName: The GED Application Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/GEDApplication" />
  - name: graduated_model
    x-displayName: The Graduated Application Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/GraduatedApplication" />
  - name: ungraduated_model
    x-displayName: The Ungraduated Application Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UngraduatedApplication" />
  - name: general_error_model
    x-displayName: The General Error Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/GeneralError" />
  - name: Yves-Saint-Laurent
    description: 엔트리 인터뷰 시스템
x-tagGroups:
  - name: Avengers
    tags:
      - 회원가입
      - 인증
      - 마이페이지
      - 사진
      - 원서 가져오기
      - 원서 제출
      - 최종제출
  - name: Schemas
    tags:
      - ged_model
      - graduated_model
      - ungraduated_model
      - general_error_model
  - name: Interview
    tags:
      - Yves-Saint-Laurent
paths:
  /signup:
    post:
      tags:
        - 회원가입
      summary: 회원가입 요청
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '204':
          description: Verification code and link sent to your email.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSignupInfo'
        '409':
          description: Conflict exceeded
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UserAlreadyExists'
                  - $ref: '#/components/schemas/SignupAlreadyRequested'
  /signup/verify:
    get:
      tags:
        - 회원가입
      summary: 회원가입 인증
      parameters:
        - name: key
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Verification success
        '400':
          description: Invalid or expired key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidVerificationKey'
  /auth:
    post:
      tags:
        - 인증
      summary: 로그인
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: Login succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: ThIsIs.TrUlY.AcCeSsToKeN
                  refresh:
                    type: string
                    example: ThIsIs.TrUlY.ReFrEsHtOkEn
        '403':
          description: Login information is incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFound'
    patch:
      tags:
        - 인증
      summary: 리프레쉬
      security:
        - RefreshJSONWebTokenAuthentication: []
      responses:
        '201':
          description: Refresh succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: ThIsIs.TrUlY.AcCeSsToKeN
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
    delete:
      tags:
        - 인증
      summary: 로그아웃
      security:
        - RefreshJSONWebTokenAuthentication: []
      responses:
        '204':
          description: Logout succeed
  /self/status:
    get:
      tags:
        - 마이페이지
      summary: 진행상황 등 내 정보
      security:
        - JSONWebTokenAuthentication: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatus'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
  /self/photo:
    put:
      tags:
        - 사진
      summary: 사진 업로드
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '204':
          description: Image upload success
        '400':
          description: Invalid type of image
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
    get:
      tags:
        - 사진
      summary: 사진 받아오기
      responses:
        '200':
          description: Success
          content:
            'image/png, image/jpeg':
              schema:
                type: string
                format: binary
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
        '404':
          description: Image not found
  /self/application:
    get:
      tags:
        - 원서 가져오기
      summary: 원서 가져오기
      security:
        - JSONWebTokenAuthentication: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GEDApplication'
                  - $ref: '#/components/schemas/GraduatedApplication'
                  - $ref: '#/components/schemas/UngraduatedApplication'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
        '404':
          description: Any application submitted yet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNotFound'
  /self/application/ged:
    put:
      tags:
        - 원서 제출
      summary: 검정고시 원서 제출
      security:
        - JSONWebTokenAuthentication: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GEDApplication'
      responses:
        '204':
          description: Success
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApplicationPatch'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
        '409':
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyFinalSubmitted'
  /self/application/graduated:
    put:
      tags:
        - 원서 제출
      summary: 졸업자 원서 제출
      security:
        - JSONWebTokenAuthentication: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraduatedApplication'
      responses:
        '204':
          description: Success
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApplicationPatch'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
        '409':
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyFinalSubmitted'
  /self/application/ungraduated:
    put:
      tags:
        - 원서 제출
      summary: 졸업 예정자 원서 제출
      security:
        - JSONWebTokenAuthentication: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UngraduatedApplication'
      responses:
        '204':
          description: Success
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApplicationPatch'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
        '409':
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyFinalSubmitted'
  /self/application/final-submit:
    patch:
      tags:
        - 최종제출
      summary: 최종제출
      description: 되돌릴 수 없음
      security:
        - JSONWebTokenAuthentication: []
      responses:
        '204':
          description: Final submit succeed
        '400':
          description: Invalid application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApplicationFinalSubmit'
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TokenError'
                  - $ref: '#/components/schemas/TokenExpired'
        '409':
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyFinalSubmitted'
  /agency/cheak:
    get:
      tags:
        - Yves-Saint-Laurent
      summary: Check agency code
      description: Check agency code
      parameters:
        - name: code
          in: query
          example: ENTRY19
          description: agency code
          schema:
            type: string
      responses:
        '200':
          description: check agency succese
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency_name:
                    type: string
                    example: ENTRYDSM
                  agnecy_explanation:
                    type: string
                    example: 학교입학전형을 만드는 엔트리 개발팀입니다.
        '400':
          description: unseen agency
  '/admin/{agency_code}/interviewer/accept':
    post:
      tags:
        - Yves-Saint-Laurent
      summary: accept interviewer
      description: acceptance of interviewer
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_email:
                  type: string
                  example: eunjuoi0515@gmail.com
      responses:
        '201':
          description: Successful interviewer accept
        '400':
          description: Check json format
  '/admin/{agency_code}/interviewer/reject':
    post:
      tags:
        - Yves-Saint-Laurent
      summary: reject interviewer
      description: be rejected by the agency
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_email:
                  type: string
                  example: eunjuoi0515@gmail.com
      responses:
        '201':
          description: Successful interviewer reject
        '400':
          description: Check json format
  '/admin/{agency_code}/interviewer':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: an applicant interviewer
      description: an applicant interviewer list
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: applicant interviewer list
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewer:
                    type: array
                    items:
                      properties:
                        interviewer_name:
                          type: string
                          example: 이채은
        '400':
          description: None Resources
  '/admin/agency/{agency_code}':
    delete:
      tags:
        - Yves-Saint-Laurent
      summary: delete agency
      description: delete agency
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful agency delete
        '400':
          description: None Resources
    get:
      tags:
        - Yves-Saint-Laurent
      summary: get agency information
      description: get agency information
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: get agency information
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency_name:
                    type: string
                    example: DSM
                  agency_kind:
                    type: string
                    example: 학교/특수목적고등학교
                  agency_code:
                    type: string
                    example: 1EDOLW
        '400':
          description: None Resources
    patch:
      tags:
        - Yves-Saint-Laurent
      summary: change agency explanation
      description: change agency explanation
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                explanation:
                  type: string
                  example: 저희 엔트리는 입학전형~
      responses:
        '201':
          description: Successful change agency explanation
        '400':
          description: Check json format
  /agency:
    get:
      tags:
        - Yves-Saint-Laurent
      summary: interviewer belonged agency
      description: View the agency the interviewer subscribes to
      responses:
        '200':
          description: get interviewer belonged agency
          content:
            application/json:
              schema:
                type: object
                properties:
                  agency:
                    type: array
                    items:
                      properties:
                        agency_name:
                          type: string
                          example: Entry
        '400':
          description: None Resources
  '/{agency_code}':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: get an ongoing interview with an agency
      description: get an ongoing interview with an agency
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: get ongoing interview
          content:
            application/json:
              schema:
                type: object
                properties:
                  interview:
                    type: array
                    items:
                      properties:
                        interview_name:
                          type: string
                          example: 대전일반전형면접
                        interivew_explanation:
                          type: string
                          example: 대전 일반 전형에 대한 면접입니다.
        '400':
          description: None Resources
  '/admin/{agency_code}/ready/interview':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: get an ready interview list
      description: get an ready interview list with an agency
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: get ready interview
          content:
            application/json:
              schema:
                type: object
                properties:
                  interview:
                    type: array
                    items:
                      properties:
                        interview_name:
                          type: string
                          example: 대전일반전형면접
                        interivew_explanation:
                          type: string
                          example: 대전 일반 전형에 대한 면접입니다.
        '400':
          description: None Resources
  '/{agency_code}/{interview_id}/{question_num}':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: get interview question
      description: get interview question
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interivew_id
          required: true
          schema:
            type: integer
        - name: question_num
          in: path
          description: question_num
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: get interivew question
          content:
            application/json:
              schema:
                type: object
                properties:
                  question:
                    type: string
                    example: 간단하게 자기소개를 해주세요.
        '400':
          description: None Resources
  '/{agency_code}/{interview_id}/{question_num}/{student_code}':
    post:
      tags:
        - Yves-Saint-Laurent
      summary: answer to interview question
      description: answer to interview question
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interivew_id
          required: true
          schema:
            type: integer
        - name: question_num
          in: path
          description: question_num
          required: true
          schema:
            type: integer
        - name: student_code
          in: path
          description: student_code
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                answer:
                  type: string
                  example: 저는 부산에서자라~
      responses:
        '201':
          description: Successful answer
        '400':
          description: Check json format
  '/{agency_code}/{interview_id}':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: search interviewee
      description: search interviewee
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interivew_id
          required: true
          schema:
            type: integer
        - name: interviewee
          in: query
          description: interviewee
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: find interviewee
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewee_name:
                    type: string
                    example: 오경태
        '400':
          description: an interviewee without
  '/admin/{agency_code}/done/interview':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: get an done interview list
      description: get an done interview list with an agency
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: get done interview
          content:
            application/json:
              schema:
                type: object
                properties:
                  interview:
                    type: array
                    items:
                      properties:
                        interview_name:
                          type: string
                          example: 대전일반전형면접
                        interivew_explanation:
                          type: string
                          example: 대전 일반 전형에 대한 면접입니다.
        '400':
          description: None Resources
  '/admin/{agency_code}/interview':
    post:
      tags:
        - Yves-Saint-Laurent
      summary: create interview
      description: create interview
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 대전 일반전형 면접1실
                start_date:
                  type: string
                  example: '2019-07-23'
                end_date:
                  type: string
                  example: '2019-08-30'
      responses:
        '201':
          description: Successful create interview
        '400':
          description: Check json format
  '/admin/{agency_code}/{interview_id}/question':
    post:
      tags:
        - Yves-Saint-Laurent
      summary: create interview qeustion
      description: create interview qeustion
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_code
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question_num:
                  type: integer
                  example: 1
                content:
                  type: string
                  example: 자기소개해주세요
                type:
                  type: integer
                  example: 2
      responses:
        '201':
          description: Successful create interview question
        '400':
          description: Cheak json format
  '/admin/{agency_code}/{interview_id}':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: get interview qeustion
      description: get interview qeustion
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: get interview quesiton list
          content:
            application/json:
              schema:
                type: object
                properties:
                  interview_question:
                    type: array
                    items:
                      properties:
                        question_num:
                          type: integer
                          example: 1
                        content:
                          type: string
                          example: 자기소개를해주세요.
        '400':
          description: None Resources
  '/admin/{agency_code}/{interview_id}/{question_num}':
    put:
      tags:
        - Yves-Saint-Laurent
      summary: modified interview qeustion
      description: modified interview qeustion
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_id
          required: true
          schema:
            type: string
        - name: question_num
          in: path
          description: quesion_num
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question_num:
                  type: integer
                  example: 1
                content:
                  type: string
                  example: 자기소개좀 해주세요.
                type:
                  type: integer
                  example: 3
      responses:
        '201':
          description: Successful change question
        '400':
          description: Cheak json format
    delete:
      tags:
        - Yves-Saint-Laurent
      summary: modified interview qeustion
      description: modified interview qeustion
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interview_id
          required: true
          schema:
            type: string
        - name: question_num
          in: path
          description: quesion_num
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful delete question
        '400':
          description: Cheak json format
  '/admin/{agency_code}/{interview_id}/evaluation':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: search the Evaluated Interviewer
      description: search the Evaluated Interviewer
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interivew_id
          required: true
          schema:
            type: integer
        - name: interviewee
          in: query
          description: interviewee
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: find interviewee
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewee_name:
                    type: string
                    example: 이채은
        '400':
          description: an interviewee without
  '/admin/{agency_code}/{interview_id}/evaluation/{interviewee_code}/interviewer':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: get interviewee evaluation interviewer list
      description: get interviewee evaluation interviewer list
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interivew_id
          required: true
          schema:
            type: integer
        - name: interviewee_code
          in: path
          description: interviewee
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: get interviewee evaluation interviewer list
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewer:
                    type: array
                    items:
                      properties:
                        interviewer_id:
                          type: string
                          example: eunjuoi0515@gmail.com
                        interviwer_name:
                          type: string
                          example: 신은주
        '400':
          description: None Resources
  '/admin/{agency_code}/{interview_id}/evaluation/{interviewee_code}/interviewer/{interviewer_id}':
    get:
      tags:
        - Yves-Saint-Laurent
      summary: get interviewee evaluation interviewer list
      description: get interviewee evaluation interviewer list
      parameters:
        - name: agency_code
          in: path
          description: agency_code
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          description: interivew_id
          required: true
          schema:
            type: integer
        - name: interviewee_code
          in: path
          description: interviewee
          required: true
          schema:
            type: integer
        - name: interviewer_id
          in: path
          description: interviewer_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: get interviewee evaluation interviewer result
          content:
            application/json:
              schema:
                type: object
                properties:
                  evaluation:
                    type: array
                    items:
                      properties:
                        qeustion_num:
                          type: integer
                          example: 1
                        qeustion_content:
                          type: string
                          example: 자기소개해주세요
                        answer:
                          type: string
                          example: 당차고 당당한 자세가 마음에 듦
                        interviewee_name:
                          type: string
                          example: 이채은
                        interviewee_code:
                          type: integer
                          example: 3098
        '400':
          description: None Resources
  /agency/join:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: To apply to an agency
      description: To apply to an agency
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agency_code:
                  type: string
                  example: EXEGS23
      responses:
        '201':
          description: Successful change question
        '400':
          description: It's agency that doesn't exist.
  /interviewer/signup:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: signup to interviewer
      description: signup to interviewer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 이채은
                eamil:
                  type: string
                  example: entry@dsm.hs.kr
                password:
                  type: string
                  example: 1234qwer
      responses:
        '201':
          description: Successful signup to interviwer
        '400':
          description: Check json format
        '409':
          description: This email has already been signed up.
  /admin/signup:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: signup to admin
      description: signup to admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agency_name:
                  type: string
                  example: ENTRY
                agency_kind:
                  type: string
                  example: 고등학교
                eamil:
                  type: string
                  example: entry@dsm.hs.kr
                password:
                  type: string
                  example: 1234qwer
                agency_explanation:
                  type: string
                  example: 즐겁고 행복한 입학전형팀
      responses:
        '201':
          description: Successful signup to admin
        '400':
          description: Check json format
        '409':
          description: This email has already been signed up.
  /agency_admin/login:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: login to admin
      description: login to admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                eamil:
                  type: string
                  example: entry@dsm.hs.kr
                password:
                  type: string
                  example: 1234qwer
      responses:
        '200':
          description: Successful login to admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: 3924802pedlefsdnkfsnlndlk
                  refresh_token:
                    type: string
                    example: 304923j92030498920394830984
        '400':
          description: Cheak eamil and password
  /interviewer/login:
    post:
      tags:
        - Yves-Saint-Laurent
      summary: login to interviwer
      description: login to interviewer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                eamil:
                  type: string
                  example: entry@dsm.hs.kr
                password:
                  type: string
                  example: 1234qwer
      responses:
        '200':
          description: Successful login to interviewer
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: 3924802pedlefsdnkfsnlndlk
                  refresh_token:
                    type: string
                    example: 304923j92030498920394830984
        '400':
          description: Cheak eamil and password
components:
  securitySchemes:
    JSONWebTokenAuthentication:
      type: apiKey
      in: header
      name: Authorization
    RefreshJSONWebTokenAuthentication:
      type: apiKey
      in: header
      name: X-Refresh-Token
  schemas:
    Classification:
      type: object
      properties:
        apply_type:
          type: string
          example: COMMON
          enum:
            - COMMON
            - MEISTER
            - SOCIAL_ONE_PARENT
            - SOCIAL_FROM_NORTH
            - SOCIAL_MULTICULTURAL
            - SOCIAL_BASIC_LIVING
            - SOCIAL_LOWEST_INCOME
            - SOCIAL_TEEN_HOUSEHOLDER
        additional_type:
          type: string
          example: NOT_APPLICABLE
          enum:
            - NATIONAL_MERIT
            - PRIVILEGED_ADMISSION
            - NOT_APPLICABLE
        is_daejeon:
          type: boolean
          example: false
    PersonalInformation:
      type: object
      properties:
        name:
          type: string
          example: 홍길동
        sex:
          type: string
          enum:
            - MALE
            - FEMALE
        birth_date:
          type: string
          format: date
        parent_name:
          type: string
          example: 홍판서
        parent_tel:
          type: string
          pattern: '^01\d{8,9}$'
          example: 01011110987
        applicant_tel:
          type: string
          pattern: '^01\d{8,9}$'
          example: 01011110987
        address:
          type: string
          example: 경기도 용인시 기흥구 동백평촌로 11
        post_code:
          type: string
          pattern: '^\d{5}$'
          example: '55555'
    PersonalInformationWithCurrentSchoolInfo:
      allOf:
        - $ref: '#/components/schemas/PersonalInformation'
        - type: object
          properties:
            student_number:
              type: string
              pattern: '^\d{5}$'
              example: '30202'
            school_name:
              type: string
            school_tel:
              type: string
              pattern: '^01\d{8,9}$'
              example: 01011110987
    PersonalInformationWithGraduatedSchoolInfo:
      allOf:
        - $ref: '#/components/schemas/PersonalInformationWithCurrentSchoolInfo'
        - type: object
          properties:
            graduated_year:
              type: string
              pattern: '^\d{4}$'
              example: '2019'
    GEDGrade:
      type: object
      properties:
        ged_average_score:
          type: number
    DiligenceGrade:
      type: object
      properties:
        volunteer_time:
          type: integer
        full_cut_count:
          type: integer
        period_cut_count:
          type: integer
        late_count:
          type: integer
        early_leave_count:
          type: integer
    ScoreWith5Semister:
      type: array
      items:
        type: string
        enum:
          - A
          - B
          - C
          - D
          - E
          - X
      maxLength: 5
      minLength: 5
      example:
        - A
        - A
        - A
        - A
        - A
    UngraduatedSchoolGrade:
      type: object
      properties:
        korean:
          $ref: '#/components/schemas/ScoreWith5Semister'
        social:
          $ref: '#/components/schemas/ScoreWith5Semister'
        history:
          $ref: '#/components/schemas/ScoreWith5Semister'
        math:
          $ref: '#/components/schemas/ScoreWith5Semister'
        science:
          $ref: '#/components/schemas/ScoreWith5Semister'
        tech_and_home:
          $ref: '#/components/schemas/ScoreWith5Semister'
        english:
          $ref: '#/components/schemas/ScoreWith5Semister'
    ScoreWith6Semister:
      type: array
      items:
        type: string
        enum:
          - A
          - B
          - C
          - D
          - E
          - X
      maxLength: 6
      minLength: 6
      example:
        - A
        - A
        - A
        - A
        - A
        - A
    GraduatedSchoolGrade:
      type: object
      properties:
        korean:
          $ref: '#/components/schemas/ScoreWith6Semister'
        social:
          $ref: '#/components/schemas/ScoreWith6Semister'
        history:
          $ref: '#/components/schemas/ScoreWith6Semister'
        math:
          $ref: '#/components/schemas/ScoreWith6Semister'
        science:
          $ref: '#/components/schemas/ScoreWith6Semister'
        tech_and_home:
          $ref: '#/components/schemas/ScoreWith6Semister'
        english:
          $ref: '#/components/schemas/ScoreWith6Semister'
    SelfIntroductionAndStudyPlan:
      type: object
      properties:
        self_introduction:
          type: string
        study_plan:
          type: string
    GEDApplication:
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/Classification'
        personal_information:
          $ref: '#/components/schemas/PersonalInformation'
        ged_grade:
          $ref: '#/components/schemas/GEDGrade'
        self_introduction_and_study_plan:
          $ref: '#/components/schemas/SelfIntroductionAndStudyPlan'
    GraduatedApplication:
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/Classification'
        personal_information:
          $ref: '#/components/schemas/PersonalInformationWithGraduatedSchoolInfo'
        diligence_grade:
          $ref: '#/components/schemas/DiligenceGrade'
        school_grade:
          $ref: '#/components/schemas/GraduatedSchoolGrade'
        self_introduction_and_study_plan:
          $ref: '#/components/schemas/SelfIntroductionAndStudyPlan'
    UngraduatedApplication:
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/Classification'
        personal_information:
          $ref: '#/components/schemas/PersonalInformationWithCurrentSchoolInfo'
        diligence_grade:
          $ref: '#/components/schemas/DiligenceGrade'
        school_grade:
          $ref: '#/components/schemas/UngraduatedSchoolGrade'
        self_introduction_and_study_plan:
          $ref: '#/components/schemas/SelfIntroductionAndStudyPlan'
    ApplicationStatus:
      type: object
      properties:
        is_paid:
          type: boolean
          example: false
        is_passed_first_apply:
          type: boolean
          example: false
        is_passed_interview:
          type: boolean
          example: false
        is_printed_application_arrived:
          type: boolean
          example: false
        is_final_submit:
          type: boolean
          example: false
        receipt_code:
          type: integer
          example: 1
        exam_code:
          type: string
          example: '124533'
          nullable: true
    GeneralError:
      type: object
      properties:
        error_code:
          type: integer
          description: Error codes to help BE devs. it describes detailed error
          example: 9999
        description:
          type: string
          description: Text to show users what happened
          example: Our service is currently unavailable. Please try again later.
    InvalidApplicationPatch:
      type: object
      properties:
        description:
          type: string
          example: Invalid application submitted.
        error_code:
          type: string
          example: 1100
    InvalidApplicationFinalSubmit:
      type: object
      properties:
        description:
          type: string
          example: Please fill out all column before final submit.
        error_code:
          type: string
          example: 1100
    AlreadyFinalSubmitted:
      type: object
      properties:
        description:
          type: string
          example: Final submitted application can't be edited.
        error_code:
          type: string
          example: 1101
    ApplicationNotFound:
      type: object
      properties:
        description:
          type: string
          example: Any application submitted yet.
        error_code:
          type: string
          example: 1102
    UserNotFound:
      type: object
      properties:
        description:
          type: string
          example: Login information is incorrect.
        error_code:
          type: string
          example: 1200
    TokenExpired:
      type: object
      properties:
        description:
          type: string
          example: Please login again.
        error_code:
          type: string
          example: 1201
    TokenError:
      type: object
      properties:
        description:
          type: string
          example: Please login again.
        error_code:
          type: string
          example: 1202
    InvalidSignupInfo:
      type: object
      properties:
        description:
          type: string
          example: Invalid signup request
        error_code:
          type: string
          example: 1300
    UserAlreadyExists:
      type: object
      properties:
        description:
          type: string
          example: User already exists
        error_code:
          type: string
          example: 1300
    SignupAlreadyRequested:
      type: object
      properties:
        description:
          type: string
          example: Signup verification email already sent
        error_code:
          type: string
          example: 1302
    InvalidVerificationKey:
      type: object
      properties:
        description:
          type: string
          example: Invalid or expired verification key
        error_code:
          type: string
          example: 1303
