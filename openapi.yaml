openapi: 3.0.0
info:
  version: 1.0.0
  title: api.entrydsm.hs.kr
  termsOfService: 'https://entrydsm.hs.kr/terms/'
  contact:
    email: entrydsm@entrydsm.hs.kr
    url: 'https://www.facebook.com/entrydsm/'
  x-logo:
    url: 'https://i.ibb.co/JxqpcqB/New-Project.png'
  description: |
    [![Build Status](https://travis-ci.org/EntryDSM/Docs.svg?branch=master)](https://travis-ci.org/EntryDSM/Docs)

    This is EntryDSM API docs! You can develop services&frontend by reading this :)
servers:
  - url: 'https://api.entrydsm.hs.kr/api/v1'
paths:
  /signup:
    post:
      tags:
        - 회원가입
      summary: 회원가입 요청
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '204':
          description: Verification code and link sent to your email.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSignupInfo'
        '409':
          description: Conflict exceeded
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UserAlreadyExists'
                  - $ref: '#/components/schemas/SignupAlreadyRequested'
  /signup/verify:
    get:
      tags:
        - 회원가입
      summary: 회원가입 인증
      parameters:
        - name: key
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Verification success
        '400':
          description: Invalid or expired key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidVerificationKey'
  /auth:
    post:
      tags:
        - 인증
      summary: 로그인
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: Login succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: ThIsIs.TrUlY.AcCeSsToKeN
                  refresh:
                    type: string
                    example: ThIsIs.TrUlY.ReFrEsHtOkEn
    patch:
      tags:
        - 인증
      summary: 리프레쉬
      security:
        - RefreshJSONWebTokenAuthentication: []
      responses:
        '201':
          description: Refresh succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    example: ThIsIs.TrUlY.AcCeSsToKeN
    delete:
      tags:
        - 인증
      summary: 로그아웃
      security:
        - RefreshJSONWebTokenAuthentication: []
      responses:
        '204':
          description: Logout succeed
  /self/status:
    get:
      tags:
        - 마이페이지
      summary: 진행상황 등 내 정보
      security:
        - JSONWebTokenAuthentication: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatus'
  /self/photo:
    put:
      tags:
        - 사진
      summary: 사진 업로드
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
              description: image
      responses:
        '204':
          description: Image upload success
        '400':
          description: Invalid type of image
  /self/application:
    get:
      tags:
        - 원서 가져오기
      summary: 원서 가져오기
      security:
        - JSONWebTokenAuthentication: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GEDApplication'
                  - $ref: '#/components/schemas/GraduatedApplication'
                  - $ref: '#/components/schemas/UngraduatedApplication'
        '404':
          description: Any application submitted yet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNotFound'
  /self/application/ged:
    put:
      tags:
        - 원서 제출
      summary: 검정고시 원서 제출
      security:
        - JSONWebTokenAuthentication: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GEDApplication'
      responses:
        '204':
          description: Success
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApplicationPatch'
        '409':
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyFinalSubmitted'
  /self/application/graduated:
    put:
      tags:
        - 원서 제출
      summary: 졸업자 원서 제출
      security:
        - JSONWebTokenAuthentication: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraduatedApplication'
      responses:
        '204':
          description: Success
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApplicationPatch'
        '409':
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyFinalSubmitted'
  /self/application/ungraduated:
    put:
      tags:
        - 원서 제출
      summary: 졸업 예정자 원서 제출
      security:
        - JSONWebTokenAuthentication: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UngraduatedApplication'
      responses:
        '204':
          description: Success
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApplicationPatch'
        '409':
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyFinalSubmitted'
  /self/application/final-submit:
    patch:
      tags:
        - 최종제출
      summary: 최종제출
      description: 되돌릴 수 없음
      security:
        - JSONWebTokenAuthentication: []
      responses:
        '204':
          description: Final submit succeed
        '400':
          description: Invalid application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApplicationFinalSubmit'
        '409':
          description: Already final submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyFinalSubmitted'
components:
  securitySchemes:
    JSONWebTokenAuthentication:
      type: apiKey
      in: header
      name: Authorization
    RefreshJSONWebTokenAuthentication:
      type: apiKey
      in: header
      name: X-Refresh-Token
  schemas:
    Classification:
      type: object
      properties:
        apply_type:
          type: string
          example: COMMON
          enum:
            - COMMON
            - MEISTER
            - SOCIAL_ONE_PARENT
            - SOCIAL_FROM_NORTH
            - SOCIAL_MULTICULTURAL
            - SOCIAL_BASIC_LIVING
            - SOCIAL_LOWEST_INCOME
            - SOCIAL_TEEN_HOUSEHOLDER`
        additional_type:
          type: string
          example: NOT_APPLICABLE
          enum:
            - NATIONAL_MERIT
            - PRIVILEGED_ADMISSION
            - NOT_APPLICABLE`
        is_daejeon:
          type: boolean
          example: false
    PersonalInformation:
      type: object
      properties:
        name:
          type: string
          example: 홍길동
        sex:
          type: string
          enum:
            - MALE
            - FEMALE
        birth_date:
          type: string
          format: date
        parent_name:
          type: string
          example: 홍판서
        parent_tel:
          type: string
          pattern: '^01\d{8,9}$'
          example: 01011110987
        applicant_tel:
          type: string
          pattern: '^01\d{8,9}$'
          example: 01011110987
        address:
          type: string
          example: 경기도 용인시 기흥구 동백평촌로 11
        post_code:
          type: string
          pattern: '^\d{5}$'
          example: 55555
    PersonalInformationWithSchoolInfo:
      allOf:
        - $ref: '#/components/schemas/PersonalInformation'
        - type: object
          properties:
            student_number:
              type: string
              pattern: '^\d{5}$'
              example: 30202
            school_name:
              type: string
            school_tel:
              type: string
              pattern: '^01\d{8,9}$'
              example: 01011110987
    GEDGrade:
      type: object
      properties:
        ged_average_score:
          type: number
    DiligenceGrade:
      type: object
      properties:
        volunteer_time:
          type: integer
        full_cut_count:
          type: integer
        period_cut_count:
          type: integer
        late_count:
          type: integer
        early_leave_count:
          type: integer
    ScoreWith5Semister:
      type: array
      items:
        type: string
        enum:
          - A
          - B
          - C
          - D
          - E
          - X
      maxLength: 5
      minLength: 5
      example:
        - A
        - A
        - A
        - A
        - A
    UngraduatedSchoolGrade:
      type: object
      properties:
        korean:
          $ref: '#/components/schemas/ScoreWith5Semister'
        social:
          $ref: '#/components/schemas/ScoreWith5Semister'
        history:
          $ref: '#/components/schemas/ScoreWith5Semister'
        math:
          $ref: '#/components/schemas/ScoreWith5Semister'
        science:
          $ref: '#/components/schemas/ScoreWith5Semister'
        tech_and_home:
          $ref: '#/components/schemas/ScoreWith5Semister'
        english:
          $ref: '#/components/schemas/ScoreWith5Semister'
    ScoreWith6Semister:
      type: array
      items:
        type: string
        enum:
          - A
          - B
          - C
          - D
          - E
          - X
      maxLength: 6
      minLength: 6
      example:
        - A
        - A
        - A
        - A
        - A
        - A
    GraduatedSchoolGrade:
      type: object
      properties:
        korean:
          $ref: '#/components/schemas/ScoreWith6Semister'
        social:
          $ref: '#/components/schemas/ScoreWith6Semister'
        history:
          $ref: '#/components/schemas/ScoreWith6Semister'
        math:
          $ref: '#/components/schemas/ScoreWith6Semister'
        science:
          $ref: '#/components/schemas/ScoreWith6Semister'
        tech_and_home:
          $ref: '#/components/schemas/ScoreWith6Semister'
        english:
          $ref: '#/components/schemas/ScoreWith6Semister'
    SelfIntroductionAndStudyPlan:
      type: object
      properties:
        self_introduction:
          type: string
        study_plan:
          type: string
    GEDApplication:
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/Classification'
        personal_information:
          $ref: '#/components/schemas/PersonalInformation'
        ged_grade:
          $ref: '#/components/schemas/GEDGrade'
        self_introduction_and_study_plan:
          $ref: '#/components/schemas/SelfIntroductionAndStudyPlan'
    GraduatedApplication:
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/Classification'
        personal_information:
          $ref: '#/components/schemas/PersonalInformationWithSchoolInfo'
        diligence_grade:
          $ref: '#/components/schemas/DiligenceGrade'
        school_grade:
          $ref: '#/components/schemas/GraduatedSchoolGrade'
        self_introduction_and_study_plan:
          $ref: '#/components/schemas/SelfIntroductionAndStudyPlan'
    UngraduatedApplication:
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/Classification'
        personal_information:
          $ref: '#/components/schemas/PersonalInformationWithSchoolInfo'
        diligence_grade:
          $ref: '#/components/schemas/DiligenceGrade'
        school_grade:
          $ref: '#/components/schemas/UngraduatedSchoolGrade'
        self_introduction_and_study_plan:
          $ref: '#/components/schemas/SelfIntroductionAndStudyPlan'
    ApplicationStatus:
      type: object
      properties:
        is_paid:
          type: boolean
          example: false
        is_passed_first_apply:
          type: boolean
          example: false
        is_printed_application_arrived:
          type: boolean
          example: false
        is_final_submit:
          type: boolean
          example: false
        receipt_code:
          type: integer
          example: 1
        exam_code:
          type: string
          example: 124533
          nullable: true
    InvalidApplicationPatch:
      type: object
      properties:
        description:
          type: string
          example: Invalid application submitted.
        error_code:
          type: string
          example: 1100
    InvalidApplicationFinalSubmit:
      type: object
      properties:
        description:
          type: string
          example: Please fill out all column before final submit.
        error_code:
          type: string
          example: 1100
    AlreadyFinalSubmitted:
      type: object
      properties:
        description:
          type: string
          example: Final submitted application can't be edited.
        error_code:
          type: string
          example: 1101
    ApplicationNotFound:
      type: object
      properties:
        description:
          type: string
          example: Any application submitted yet.
        error_code:
          type: string
          example: 1102
    InvalidSignupInfo:
      type: object
      properties:
        description:
          type: string
          example: Invalid signup request
        error_code:
          type: string
          example: 1300
    UserAlreadyExists:
      type: object
      properties:
        description:
          type: string
          example: User already exists
        error_code:
          type: string
          example: 1300
    SignupAlreadyRequested:
      type: object
      properties:
        description:
          type: string
          example: Signup verification email already sent
        error_code:
          type: string
          example: 1302
    InvalidVerificationKey:
      type: object
      properties:
        description:
          type: string
          example: Invalid or expired verification key
        error_code:
          type: string
          example: 1303
